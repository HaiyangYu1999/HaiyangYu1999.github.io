<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Haiyang Yu&#39;s Blog</title>
  
  
  <link href="https://yoursite/atom.xml" rel="self"/>
  
  <link href="https://yoursite/"/>
  <updated>2021-05-23T03:39:41.414Z</updated>
  <id>https://yoursite/</id>
  
  <author>
    <name>Haiyang Yu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>1</title>
    <link href="https://yoursite/2021/05/23/Others/1/"/>
    <id>https://yoursite/2021/05/23/Others/1/</id>
    <published>2021-05-23T03:39:40.000Z</published>
    <updated>2021-05-23T03:39:41.414Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>阿里巴巴数据开发实习生三面面经</title>
    <link href="https://yoursite/2021/05/06/%E9%9D%A2%E7%BB%8F/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%B8%89%E9%9D%A2%E9%9D%A2%E7%BB%8F/"/>
    <id>https://yoursite/2021/05/06/%E9%9D%A2%E7%BB%8F/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%B8%89%E9%9D%A2%E9%9D%A2%E7%BB%8F/</id>
    <published>2021-05-06T15:33:55.000Z</published>
    <updated>2021-06-16T15:11:33.222Z</updated>
    
    <content type="html"><![CDATA[<p>自我介绍</p><p>N个文件, 每个文件有序, 怎么合并成一个整体有序的文件? 时间空间复杂度是多少? (外部排序)</p><p>如何设计一个整数压缩算法? 一个整数数组, 用尽可能小的空间存放, 并且可以压缩完之后可以还原. (这个应该有专门的整数压缩算法, 但我不知道, 用之前学的霍夫曼编码构造了一下)</p><p>讲讲进程间通讯和线程间通讯的方法?</p><p>编程题, </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用数组实现队列</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Queue</span>&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">  <span class="keyword">int</span> values[];</span><br><span class="line">  <span class="keyword">int</span> <span class="built_in">begin</span>;</span><br><span class="line">  <span class="keyword">int</span> <span class="built_in">end</span>;</span><br><span class="line">  <span class="keyword">int</span> <span class="built_in">size</span>;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  Queue(<span class="keyword">int</span> n)&#123;</span><br><span class="line">    ++n;</span><br><span class="line">    values = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">    <span class="built_in">size</span> = n;</span><br><span class="line">    <span class="built_in">begin</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">end</span> = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  ~Queue()&#123;</span><br><span class="line">    <span class="keyword">delete</span>[] values;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">push_back</span><span class="params">(<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">end</span> == (<span class="built_in">begin</span> - <span class="number">1</span>) % <span class="built_in">size</span>)&#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;FullQueue&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">end</span> = (<span class="built_in">end</span> + <span class="number">1</span>) % <span class="built_in">size</span>;</span><br><span class="line">      values[<span class="built_in">end</span>] = a;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">int</span> <span class="title">pop_front</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">end</span> == <span class="built_in">begin</span>)&#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;EmptyQueue&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">int</span> ret = values[<span class="built_in">begin</span>];</span><br><span class="line">      <span class="built_in">begin</span> = (<span class="built_in">begin</span> + <span class="number">1</span>) % <span class="built_in">size</span>;</span><br><span class="line">      <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;自我介绍&lt;/p&gt;
&lt;p&gt;N个文件, 每个文件有序, 怎么合并成一个整体有序的文件? 时间空间复杂度是多少? (外部排序)&lt;/p&gt;
&lt;p&gt;如何设计一个整数压缩算法? 一个整数数组, 用尽可能小的空间存放, 并且可以压缩完之后可以还原. (这个应该有专门的整数压缩算法, 但我不</summary>
      
    
    
    
    <category term="面经" scheme="https://yoursite/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="面经" scheme="https://yoursite/tags/%E9%9D%A2%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>阿里巴巴数据开发实习生二面面经</title>
    <link href="https://yoursite/2021/04/24/%E9%9D%A2%E7%BB%8F/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%BA%8C%E9%9D%A2%E9%9D%A2%E7%BB%8F/"/>
    <id>https://yoursite/2021/04/24/%E9%9D%A2%E7%BB%8F/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%BA%8C%E9%9D%A2%E9%9D%A2%E7%BB%8F/</id>
    <published>2021-04-24T15:33:55.000Z</published>
    <updated>2021-06-16T15:11:51.334Z</updated>
    
    <content type="html"><![CDATA[<p>首先面试官竟然先自我介绍起来了, 介绍了组内的业务和技术栈</p><p>随后问了些实习的问题</p><p>给你一整年的关键词的数据, 关键词可以被视作字符串, 一天大概50亿条. 存储在100台机器上, 求top100频率最高的字符串</p><p>(我的思路是每台机器先map成关键词到频率的字符串, 然后相同的关键词shuffle到同一台机器上, 再reduce. 最后每台机器上取top100, 汇总到一台机器上是1w个最后再取整体的top100)</p><p>面试官问, 假如有一些关键词要被视为同一个关键词呢? 比如”北京鲜花”和”鲜花北京”或”土豆”和”马铃薯”这样的算一个关键词, 这样该怎么计算呢?</p><p>你刚才讲的1w个里面取前top100, 那该怎么做呢? (优先队列)</p><p>那如果存在并列的情况呢? 比如  1,2,….,99, 100, 100, 100, 101 的top100就是<code>[1,2,....,99, 100, 100, 100]</code>这102个元素.(我一开始答得是排序, 但是很慢, 后来想出来了, 还是用优先队列, top100是100, 那么我记录下这个100, 再把数组中所有的100添加到top里面)</p><p>java一个进程不同线程的栈是共享的吗, 栈里面存储哪些数据?</p><p>编程题, </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">15分钟自己实现优先队列的push和pop方法并且实现n个里面选前k个最大</span><br><span class="line">我感觉就是在为难我, 还说阿里的笔试我做的不好, 美名其曰考察我的代码能力， 我感觉就是人招满了, 找个借口拒绝我</span><br><span class="line">写的一般吧, 代码里还是有些问题的</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Heap</span></span>&#123;</span><br><span class="line">      Pair[] values = <span class="keyword">new</span> Pair[n];</span><br><span class="line">    <span class="keyword">int</span> size = <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(Pair pair)</span></span>&#123;</span><br><span class="line">        values[++size] = pair;</span><br><span class="line">        <span class="keyword">int</span> i = size;</span><br><span class="line">        Pair parent = values[i/<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">while</span>(i / <span class="number">2</span> &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(values[i].second &lt; parent.second)&#123;</span><br><span class="line">                Pair tmp = values[i/<span class="number">2</span>];</span><br><span class="line">                value[i/<span class="number">2</span>] = value[i];</span><br><span class="line">                value[i] = tmp;</span><br><span class="line">                i = i / <span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="function">Pair <span class="title">pop</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Pair ret = values[<span class="number">1</span>];</span><br><span class="line">        values[<span class="number">1</span>] = values[size];</span><br><span class="line">        <span class="comment">//values[size] = null 这里忘记清空了</span></span><br><span class="line">        --size;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(i * <span class="number">2</span> &lt;= size)&#123;</span><br><span class="line">            Pair left = values[i * <span class="number">2</span>];</span><br><span class="line">            Pair right = values[i * <span class="number">2</span> + <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span>(right == <span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(values[i].second &gt; left.second)&#123;</span><br><span class="line">                    Pair tmp = values[i];</span><br><span class="line">                    values[i] = left;</span><br><span class="line">                    values[i * <span class="number">2</span>] = tmp;</span><br><span class="line">                    <span class="comment">// i = i * 2  这里忘记更新i了</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(values[i].second &gt; Math.min(left.second, right.second))&#123;</span><br><span class="line">                    <span class="keyword">if</span>(left.second &gt; right.second)&#123;</span><br><span class="line">                        Pair tmp = values[i];</span><br><span class="line">                        values[i] = right;</span><br><span class="line">                        values[i * <span class="number">2</span> + <span class="number">1</span>] = tmp;</span><br><span class="line">                        <span class="comment">// i = i * 2 + 1  这里忘记更新i了</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span>&#123;</span><br><span class="line">                        Pair tmp = values[i];</span><br><span class="line">                        values[i] = left;</span><br><span class="line">                        values[i * <span class="number">2</span>] = tmp;</span><br><span class="line">                        <span class="comment">// i = i * 2  这里忘记更新i了</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">List&lt;Pair&gt; <span class="title">topK</span><span class="params">(List&lt;Pair&gt; pairs, <span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">  Heap heap = makeHeap();</span><br><span class="line">  <span class="keyword">for</span>(Pair pair : pairs)&#123;</span><br><span class="line">    <span class="keyword">if</span>(heap.size &lt; k)&#123;</span><br><span class="line">      heap.push(pair);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">      Pair top = heap.top();</span><br><span class="line">      <span class="keyword">if</span>(top.second &lt; pair.second)&#123;</span><br><span class="line">        heap.pop();</span><br><span class="line">        heap.push(pair);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> ArrayList&lt;Pair&gt;(heap);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;首先面试官竟然先自我介绍起来了, 介绍了组内的业务和技术栈&lt;/p&gt;
&lt;p&gt;随后问了些实习的问题&lt;/p&gt;
&lt;p&gt;给你一整年的关键词的数据, 关键词可以被视作字符串, 一天大概50亿条. 存储在100台机器上, 求top100频率最高的字符串&lt;/p&gt;
&lt;p&gt;(我的思路是每台机器</summary>
      
    
    
    
    <category term="面经" scheme="https://yoursite/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="面经" scheme="https://yoursite/tags/%E9%9D%A2%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>京东数据开发实习生二面面经</title>
    <link href="https://yoursite/2021/04/21/%E9%9D%A2%E7%BB%8F/%E4%BA%AC%E4%B8%9C%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%BA%8C%E9%9D%A2%E9%9D%A2%E7%BB%8F/"/>
    <id>https://yoursite/2021/04/21/%E9%9D%A2%E7%BB%8F/%E4%BA%AC%E4%B8%9C%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%BA%8C%E9%9D%A2%E9%9D%A2%E7%BB%8F/</id>
    <published>2021-04-21T12:51:22.000Z</published>
    <updated>2021-05-09T04:14:06.518Z</updated>
    
    <content type="html"><![CDATA[<ol><li>自我介绍</li><li>大数据开发的话喜欢是以平台为主还是以业务为主呢?</li><li>讲一下数据仓库分层? (又问到了这个问题, 我还是不会)</li><li>实习的过程中数据量有多大?</li><li>为什么中间数据要存到mysql中?</li><li>你做的这个报表分哪些维度?</li><li>底层的hive表是按照什么存储的呢?</li><li>只有10G的内存可用, 但是有200G的url数据, 怎么选出top10出现次数最多的url?</li><li>你简历上写的这些是学校里的课程吗? 还是自己学的?</li><li>自己学的过程中出现不明白的问题怎么解决的呢?</li></ol><hr><p>2021.05.09 更新</p><p>不知道为什么,竟然挂了, 可能是知道我有更好的offer了, 还是有更好的人选了? 感觉答的也可以啊</p>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;自我介绍&lt;/li&gt;
&lt;li&gt;大数据开发的话喜欢是以平台为主还是以业务为主呢?&lt;/li&gt;
&lt;li&gt;讲一下数据仓库分层? (又问到了这个问题, 我还是不会)&lt;/li&gt;
&lt;li&gt;实习的过程中数据量有多大?&lt;/li&gt;
&lt;li&gt;为什么中间数据要存到mysql中?&lt;/li&gt;</summary>
      
    
    
    
    <category term="面经" scheme="https://yoursite/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="面经" scheme="https://yoursite/tags/%E9%9D%A2%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>阿里巴巴数据开发实习生一面面经</title>
    <link href="https://yoursite/2021/04/20/%E9%9D%A2%E7%BB%8F/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%B8%80%E9%9D%A2%E9%9D%A2%E7%BB%8F/"/>
    <id>https://yoursite/2021/04/20/%E9%9D%A2%E7%BB%8F/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%B8%80%E9%9D%A2%E9%9D%A2%E7%BB%8F/</id>
    <published>2021-04-20T15:33:55.000Z</published>
    <updated>2021-06-16T15:11:10.945Z</updated>
    
    <content type="html"><![CDATA[<p>首先还是自我介绍, 介绍了项目和实习</p><p>你们这个实习数据量多大? 只负责的离线计算吗? 有没有做实时计算?</p><p>说一下HashMap和Hashtable区别?</p><p>介绍下java里优先队列的实现?</p><p>说一下使用线程池的好处?</p><p>在你的项目里怎么确定的线程池的参数?</p><p>你的项目里提到爬虫, 爬取的过程中怎么避免爬取重复的URL的问题呢? 用集合来存储</p><p>如果是定时爬取的话, 怎样设置集合中URL的过期时间呢? </p><p>了解redis删除过期的key的原理吗? 不了解, 蒙了一个不知道对不对</p><p>降价通知功能中每个股票对应的list是遍历一遍来扫描的吗? </p><p>为什么订阅后只发布一次通知, 如果用户想自定义发送通知的次数和步长, 和过期时间, 你应该怎么设计? (这个太难了, <strong>不得不说阿里的面试官水平是真的高, 几分钟的交流就已经了解我做的项目的原理了, 并且发现了不足的地方</strong>)</p><p>jvm有了解吗? 讲讲类加载的机制吧</p><p>说一下java进程的几个状态?</p><p>说一下java多线程的关键字?</p><p>说一下synchronized原理?</p><p>写个题吧</p><a id="more"></a><p>这个题是真的简单, 感觉和three sum一样, 甚至还更简单一些</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">有序数组n,输入k,找出满足两个数相加=k的所有序列对</span><br><span class="line">List&lt;List&lt;Integer&gt;&gt; sumK(<span class="keyword">int</span>[] n, <span class="keyword">int</span> k)&#123;</span><br><span class="line">    List&lt;List&lt;Integer&gt;&gt; ans = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="keyword">null</span> || n.length &lt; <span class="number">2</span>)&#123;</span><br><span class="line">         <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> left = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> right = n.length - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(left &lt; right)&#123;</span><br><span class="line">        <span class="keyword">while</span>(left &gt; <span class="number">0</span> &amp;&amp; left &lt; n.length &amp;&amp; n[left] == n[left-<span class="number">1</span>])&#123;</span><br><span class="line">            ++left;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(right &gt;= <span class="number">0</span> &amp;&amp; right &lt; n.length - <span class="number">1</span> &amp;&amp; n[right] == n[right+<span class="number">1</span>])&#123;</span><br><span class="line">            --right;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(left &gt;= right)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> tmp = n[left] + n[right];</span><br><span class="line">        <span class="keyword">if</span>(tmp == k)&#123;</span><br><span class="line">            ans.add(Arrays.toList(<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>]&#123;n[left], n[right]&#125;));</span><br><span class="line">            <span class="comment">//这里应该是 ans.add(new ArrayList&lt;Integer&gt;(Arrays.asList(n[left], n[right])));</span></span><br><span class="line">            ++left;</span><br><span class="line">            --right;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(tmp &gt; k)&#123;</span><br><span class="line">            --right;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            ++left;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;首先还是自我介绍, 介绍了项目和实习&lt;/p&gt;
&lt;p&gt;你们这个实习数据量多大? 只负责的离线计算吗? 有没有做实时计算?&lt;/p&gt;
&lt;p&gt;说一下HashMap和Hashtable区别?&lt;/p&gt;
&lt;p&gt;介绍下java里优先队列的实现?&lt;/p&gt;
&lt;p&gt;说一下使用线程池的好处?&lt;/p&gt;
&lt;p&gt;在你的项目里怎么确定的线程池的参数?&lt;/p&gt;
&lt;p&gt;你的项目里提到爬虫, 爬取的过程中怎么避免爬取重复的URL的问题呢? 用集合来存储&lt;/p&gt;
&lt;p&gt;如果是定时爬取的话, 怎样设置集合中URL的过期时间呢? &lt;/p&gt;
&lt;p&gt;了解redis删除过期的key的原理吗? 不了解, 蒙了一个不知道对不对&lt;/p&gt;
&lt;p&gt;降价通知功能中每个股票对应的list是遍历一遍来扫描的吗? &lt;/p&gt;
&lt;p&gt;为什么订阅后只发布一次通知, 如果用户想自定义发送通知的次数和步长, 和过期时间, 你应该怎么设计? (这个太难了, &lt;strong&gt;不得不说阿里的面试官水平是真的高, 几分钟的交流就已经了解我做的项目的原理了, 并且发现了不足的地方&lt;/strong&gt;)&lt;/p&gt;
&lt;p&gt;jvm有了解吗? 讲讲类加载的机制吧&lt;/p&gt;
&lt;p&gt;说一下java进程的几个状态?&lt;/p&gt;
&lt;p&gt;说一下java多线程的关键字?&lt;/p&gt;
&lt;p&gt;说一下synchronized原理?&lt;/p&gt;
&lt;p&gt;写个题吧&lt;/p&gt;</summary>
    
    
    
    <category term="面经" scheme="https://yoursite/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="面经" scheme="https://yoursite/tags/%E9%9D%A2%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>美团数据开发实习生二面面经</title>
    <link href="https://yoursite/2021/04/19/%E9%9D%A2%E7%BB%8F/%E7%BE%8E%E5%9B%A2%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%B8%89%E9%9D%A2%E9%9D%A2%E7%BB%8F/"/>
    <id>https://yoursite/2021/04/19/%E9%9D%A2%E7%BB%8F/%E7%BE%8E%E5%9B%A2%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%B8%89%E9%9D%A2%E9%9D%A2%E7%BB%8F/</id>
    <published>2021-04-19T08:42:39.000Z</published>
    <updated>2021-04-19T10:43:34.972Z</updated>
    
    <content type="html"><![CDATA[<p>自我介绍? 项目和实习?</p><p>为什么要做这个项目, 动机是什么?</p><p>本科和硕士学过什么课程呢?</p><p>讲讲实习主要做了哪些工作, 负责什么?</p><p>你实习写的这个监控是高可用的吗? (就一台服务器哪来的高可用, 垃圾netease) </p><p>实习的时候有mentor吗, mentor主要负责什么?</p><p>学过编译原理吗? 讲一下源代码到可执行文件的一些过程?</p><p>讲一下编译原理里面的优化? (本地相关优化, 本地无关优化)</p><p>学过汇编语言吗? 讲一下函数调用的时候栈帧是怎么变化的? (这我之前看过, 看懂过, 但是很难, 而且很快就忘了)</p><p>函数参数压栈的时候是从左到右还是从右到左? (应该是从右到左, 我答错了呜呜呜)</p><a id="more"></a><p>面试官说换个话题吧, 问问操作系统(可能是之前答的太烂了, 问不下去了)</p><p>说说内存虚拟化, 内存分页? (上来就说错了, 内存页大小默认4k, 我记成16k了)</p><p>一个进程有4G空间, 这些空间都能随便用吗?</p><p>malloc新申请的内存会存放在页表中吗?</p><p>说说mysql几种事务隔离级别?</p><p>讲一下什么是幻读, MySQL中预防幻读的机制是什么?</p><p>讲一下mysql里面myisam和innodb的区别?</p><p>mysql中为什么myisam引擎要用b树?   (这我真不知道, 后来才知道myisam也是用b+树作为索引的. 还是大意了, 光注重innodb了, myisam最基本的知识都不会了)</p><p>总结一下, 还是基础知识不牢固, 好多之前学的没有经过复习都忘了. 函数压栈, 内存页大小, myisam引擎等. 还是要不断复习不断学习.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;自我介绍? 项目和实习?&lt;/p&gt;
&lt;p&gt;为什么要做这个项目, 动机是什么?&lt;/p&gt;
&lt;p&gt;本科和硕士学过什么课程呢?&lt;/p&gt;
&lt;p&gt;讲讲实习主要做了哪些工作, 负责什么?&lt;/p&gt;
&lt;p&gt;你实习写的这个监控是高可用的吗? (就一台服务器哪来的高可用, 垃圾netease) &lt;/p&gt;
&lt;p&gt;实习的时候有mentor吗, mentor主要负责什么?&lt;/p&gt;
&lt;p&gt;学过编译原理吗? 讲一下源代码到可执行文件的一些过程?&lt;/p&gt;
&lt;p&gt;讲一下编译原理里面的优化? (本地相关优化, 本地无关优化)&lt;/p&gt;
&lt;p&gt;学过汇编语言吗? 讲一下函数调用的时候栈帧是怎么变化的? (这我之前看过, 看懂过, 但是很难, 而且很快就忘了)&lt;/p&gt;
&lt;p&gt;函数参数压栈的时候是从左到右还是从右到左? (应该是从右到左, 我答错了呜呜呜)&lt;/p&gt;</summary>
    
    
    
    <category term="面经" scheme="https://yoursite/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="面经" scheme="https://yoursite/tags/%E9%9D%A2%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>京东数据开发实习生一面面经</title>
    <link href="https://yoursite/2021/04/18/%E9%9D%A2%E7%BB%8F/%E4%BA%AC%E4%B8%9C%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%B8%80%E9%9D%A2%E9%9D%A2%E7%BB%8F/"/>
    <id>https://yoursite/2021/04/18/%E9%9D%A2%E7%BB%8F/%E4%BA%AC%E4%B8%9C%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%B8%80%E9%9D%A2%E9%9D%A2%E7%BB%8F/</id>
    <published>2021-04-18T12:08:22.000Z</published>
    <updated>2021-04-18T12:36:20.545Z</updated>
    
    <content type="html"><![CDATA[<ol><li>自我介绍</li><li>介绍下计算广告的一些基本知识, (因为做的实习是关于计算广告的, 所以问了一些). 介绍下竞价广告的主要流程</li><li>讲一下数据仓库分层?</li><li>平常数据都会存放在哪里? hdfs上吗?</li><li>你在实习中都参与了哪些工作呢, 处理那些数据?</li><li>点击率和转化率的计算公式?</li><li>转换类型有哪些?</li><li>java 8种基本数据类型? 各占几个字节?</li><li>抽象类和接口区别?</li><li>抽象类和接口的作用有什么区别呢?</li><li>java可以多继承吗?</li><li>说一下java里的主要集合有哪些?</li><li>刚才你说到HashMap, 那你讲讲HashMap和Hashtable的区别吧</li><li>java创建线程的几种方式?</li><li>给你一张(学生id,考试成绩)的表和所有学生成绩的表, 求出所有学生的考试成绩. 没参加考试的用0代替</li></ol><a id="more"></a><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">(学生id,考试成绩)          所有学生id</span><br><span class="line">0001, 100                0001</span><br><span class="line">0002, 100                0002</span><br><span class="line">0004, 90                 0003</span><br><span class="line">0005, 87                 0004</span><br><span class="line">                         0005</span><br><span class="line">返回这样的表</span><br><span class="line">0001, 100</span><br><span class="line">0002, 100</span><br><span class="line">0003, 0</span><br><span class="line">0004, 90</span><br><span class="line">0005, 87</span><br><span class="line"></span><br><span class="line">我的想法是先左连接出来一张临时表</span><br><span class="line">0001, 100</span><br><span class="line">0002, 100</span><br><span class="line">0003, null</span><br><span class="line">0004, 90</span><br><span class="line">0005, 87</span><br><span class="line">再遍历一遍把null转成0</span><br><span class="line">后来面试官说不需要这样, 一步操作就行. 这就涉及到我的知识盲区了.</span><br><span class="line">面完查了下资料才发现可以这样写</span><br><span class="line"><span class="keyword">SELECT</span> a.id, <span class="keyword">IFNULL</span>(b.score,<span class="number">0</span>) <span class="keyword">FROM</span> a <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> b <span class="keyword">ON</span> a.id=b.id;</span><br></pre></td></tr></table></figure><ol start="16"><li>spark和hive挑一个简单讲下原理</li><li>平常学习的过程中碰到了哪些困难? 都是怎么解决的?</li></ol><p>整体来说面试比较简单, 感觉和快手, 美团啥的不是一个难度的. </p>]]></content>
    
    
    <summary type="html">&lt;ol&gt;
&lt;li&gt;自我介绍&lt;/li&gt;
&lt;li&gt;介绍下计算广告的一些基本知识, (因为做的实习是关于计算广告的, 所以问了一些). 介绍下竞价广告的主要流程&lt;/li&gt;
&lt;li&gt;讲一下数据仓库分层?&lt;/li&gt;
&lt;li&gt;平常数据都会存放在哪里? hdfs上吗?&lt;/li&gt;
&lt;li&gt;你在实习中都参与了哪些工作呢, 处理那些数据?&lt;/li&gt;
&lt;li&gt;点击率和转化率的计算公式?&lt;/li&gt;
&lt;li&gt;转换类型有哪些?&lt;/li&gt;
&lt;li&gt;java 8种基本数据类型? 各占几个字节?&lt;/li&gt;
&lt;li&gt;抽象类和接口区别?&lt;/li&gt;
&lt;li&gt;抽象类和接口的作用有什么区别呢?&lt;/li&gt;
&lt;li&gt;java可以多继承吗?&lt;/li&gt;
&lt;li&gt;说一下java里的主要集合有哪些?&lt;/li&gt;
&lt;li&gt;刚才你说到HashMap, 那你讲讲HashMap和Hashtable的区别吧&lt;/li&gt;
&lt;li&gt;java创建线程的几种方式?&lt;/li&gt;
&lt;li&gt;给你一张(学生id,考试成绩)的表和所有学生成绩的表, 求出所有学生的考试成绩. 没参加考试的用0代替&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="面经" scheme="https://yoursite/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="面经" scheme="https://yoursite/tags/%E9%9D%A2%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>美团数据开发实习生二面面经</title>
    <link href="https://yoursite/2021/04/13/%E9%9D%A2%E7%BB%8F/%E7%BE%8E%E5%9B%A2%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%BA%8C%E9%9D%A2%E9%9D%A2%E7%BB%8F/"/>
    <id>https://yoursite/2021/04/13/%E9%9D%A2%E7%BB%8F/%E7%BE%8E%E5%9B%A2%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%BA%8C%E9%9D%A2%E9%9D%A2%E7%BB%8F/</id>
    <published>2021-04-13T04:48:39.000Z</published>
    <updated>2021-04-19T06:42:55.791Z</updated>
    
    <content type="html"><![CDATA[<p>没自我介绍, 感觉这个面试官不太和蔼的样子, 非常严肃, 上来就直接问</p><p>volatile关键字讲一下</p><p>threadlocal讲一下,  里面的hashmap对应的key应该是线程对象而不是线程的id</p><p>说一下垃圾回收算法(标记算法和引用计数算法)</p><p>说一下引用计数算法, 这里一开始没明白面试官的意思, 后来才知道问的是三色标记算法.</p><p>说一下CMS收集器的四个过程.</p><p>说一下JVM锁膨胀的过程? 无锁, 偏向锁, 轻量级锁, 重量级锁</p><p>说一下java里面的四种引用, 分别有什么作用? 我只知道弱引用在WeakHashMap里有点用. </p><p>问了个jvm的题</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">下面这段代码，编译为字节码时，操作数栈的深度是多少，局部变量表中有几个变量</span><br><span class="line"></span><br><span class="line">public class CalcCirc &#123;</span><br><span class="line">public int doCalc() &#123;</span><br><span class="line">int a&#x3D;10;</span><br><span class="line"> int b&#x3D;20;</span><br><span class="line"> int c&#x3D;2;</span><br><span class="line"> return (a+b)*c;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">操作数栈深度很显然是2. 先算a+b, 然后再乘c. 假如是a+b*c那深度就是3了</span><br><span class="line"></span><br><span class="line">局部变量表应该是有4个变量的, 一定不能忘了非静态方法有this指针!!</span><br></pre></td></tr></table></figure><p>说一下进程之间的通信方式?</p><p>说一下linux中管道的原理, 可以双向吗?</p><p>了解linux的IO吗? 说一下(这里我主要说的是epoll)</p><p>linux共享内存怎么解决多进程同时写的问题?</p><p>编程题, 之前做过, 直接a出来了</p><p>最后竟然面试完了直接就完了, 也没问我有什么问题. 估计是凉了吧. 但是我感觉我答的还不错啊, 除了java4种引用不会之外其他的地方都差不多答上来了. 希望能过. 求 offer</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">删除有序链表中重复出现的元素</span><br><span class="line">给出一个升序排序的链表，删除链表中的所有重复出现的元素，只保留原链表中只出现一次的元素。</span><br><span class="line">例如：</span><br><span class="line">给出的链表为<span class="number">1</span>→<span class="number">2</span>→<span class="number">3</span>→<span class="number">3</span>→<span class="number">4</span>→<span class="number">4</span>→<span class="number">5</span>, 返回<span class="number">1</span>→<span class="number">2</span>→<span class="number">5.</span></span><br><span class="line">给出的链表为<span class="number">1</span>→<span class="number">1</span>→<span class="number">1</span>→<span class="number">2</span>→<span class="number">3</span>, 返回<span class="number">2</span>→<span class="number">3.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *   int val;</span></span><br><span class="line"><span class="comment"> *   ListNode next = null;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> head ListNode类 </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> ListNode类</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">deleteDuplicates</span> <span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// write code here</span></span><br><span class="line">        <span class="keyword">if</span>(head == <span class="keyword">null</span> || head.next == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> head;</span><br><span class="line">        &#125;</span><br><span class="line">        ListNode dummyHead = <span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">        dummyHead.next = head;</span><br><span class="line">        ListNode begin_prev = dummyHead;</span><br><span class="line">        ListNode begin = begin_prev.next;</span><br><span class="line">        ListNode end = begin;</span><br><span class="line">        <span class="keyword">while</span>(begin != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">while</span>(end != <span class="keyword">null</span> &amp;&amp; end.val == begin.val)&#123;</span><br><span class="line">                end = end.next;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(begin.next == end)&#123;</span><br><span class="line">                begin_prev = begin;</span><br><span class="line">                begin = end;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                begin_prev.next = end;</span><br><span class="line">                begin = end;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dummyHead.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;没自我介绍, 感觉这个面试官不太和蔼的样子, 非常严肃, 上来就直接问&lt;/p&gt;
&lt;p&gt;volatile关键字讲一下&lt;/p&gt;
&lt;p&gt;threadlocal讲一下,  里面的hashmap对应的key应该是线程对象而不是线程的id&lt;/p&gt;
&lt;p&gt;说一下垃圾回收算法(标记算法和引用计数算法)&lt;/p&gt;
&lt;p&gt;说一下引用计数算法, 这里一开始没明白面试官的意思, 后来才知道问的是三色标记算法.&lt;/p&gt;
&lt;p&gt;说一下CMS收集器的四个过程.&lt;/p&gt;
&lt;p&gt;说一下JVM锁膨胀的过程? 无锁, 偏向锁, 轻量级锁, 重量级锁&lt;/p&gt;
&lt;p&gt;说一下java里面的四种引用, 分别有什么作用? 我只知道弱引用在WeakHashMap里有点用. &lt;/p&gt;
&lt;p&gt;问了个jvm的题&lt;/p&gt;</summary>
    
    
    
    <category term="面经" scheme="https://yoursite/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="面经" scheme="https://yoursite/tags/%E9%9D%A2%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>腾讯运营开发实习生三面面经</title>
    <link href="https://yoursite/2021/04/11/%E9%9D%A2%E7%BB%8F/%E8%85%BE%E8%AE%AF%E8%BF%90%E8%90%A5%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%B8%89%E9%9D%A2%E9%9D%A2%E7%BB%8F/"/>
    <id>https://yoursite/2021/04/11/%E9%9D%A2%E7%BB%8F/%E8%85%BE%E8%AE%AF%E8%BF%90%E8%90%A5%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%B8%89%E9%9D%A2%E9%9D%A2%E7%BB%8F/</id>
    <published>2021-04-11T14:25:09.000Z</published>
    <updated>2021-04-11T14:28:11.796Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>自我介绍</p></li><li><p>平常开发过程中使用什么语言?</p></li><li><p>为什么选择java作为自己的开发语言?</p></li><li><p>说说java和c++的区别?</p></li><li><p>你刚才提到了c++的智能指针, 说一说智能指针的作用?</p></li><li><p>平常都使用什么数据库呢?</p></li><li><p>为什么使用MySQL?</p></li><li><p>你刚才说到Maria DB是仿照的MySQL? 那么这样做会产生产权问题吗?</p></li><li><p>Maria DB和MySQL有什么不一样的地方呢?</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">面试也是半小时就结束了,很快</span><br><span class="line">希望能过吧.</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;自我介绍&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;平常开发过程中使用什么语言?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;为什么选择java作为自己的开发语言?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;说说java和c++的区别?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;你刚才提到</summary>
      
    
    
    
    <category term="面经" scheme="https://yoursite/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="面经" scheme="https://yoursite/tags/%E9%9D%A2%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>美团数据开发实习生一面面经</title>
    <link href="https://yoursite/2021/04/09/%E9%9D%A2%E7%BB%8F/%E7%BE%8E%E5%9B%A2%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%B8%80%E9%9D%A2%E9%9D%A2%E7%BB%8F/"/>
    <id>https://yoursite/2021/04/09/%E9%9D%A2%E7%BB%8F/%E7%BE%8E%E5%9B%A2%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%B8%80%E9%9D%A2%E9%9D%A2%E7%BB%8F/</id>
    <published>2021-04-09T04:49:28.000Z</published>
    <updated>2021-04-09T12:11:34.648Z</updated>
    
    <content type="html"><![CDATA[<ol><li>自我介绍</li><li>c++用的多吗? (后来才知道组里主要用c++开发的)</li><li>说说hive和mysql有什么区别? 应用场景有什么区别? hive和mysql在执行SQL的时候流程上有什么区别?</li><li>数据倾斜了解吗? 解释一下</li><li>hdfs上的有哪些压缩格式? 说一说他们的区别. (我只用过lzo压缩, 并且不知道原理)</li><li>hive会把所有的SQL都转化为mapreduce吗?  (这里感觉面试官觉得我hive掌握的一般, 就没接着问下去了)</li><li>说一下mysql 聚集索引和非聚集索引区别?</li><li>哪些情况下使用聚集索引效率高, 哪些情况下使用非聚集索引比较高?</li><li>讲一讲联合索引最左结合的规则吧</li><li>假如有一个联合索引(a, b), where条件里面写成<code>b = value_b and a = value_a</code>这样可以走联合索引吗? (之前没考虑过这个问题, 但是肯定能啊, 假如这点都做不到也太不智能了吧)</li><li>说说jdk1.7和jdk1.8里面的ConcurrentHashMap结构有什么区别?</li><li>说说ConcurrentHashMap里面的加锁类型有哪些?</li><li>讲一讲CAS的原理?</li><li>说一说使用线程池带来的优点? (线程复用, 方便管理)</li><li>你刚才说到了创建和销毁线程的开销很大, 那你来说说开销都花费在了什么地方? 这里我只回答了系统调用产生的开销和内存分配产生的开销.</li><li>你刚才说到了内存分配, 具体分配了哪些内存呢? (线程控制块, 栈内存)</li><li>你刚才说到了线程控制块, 这个数据结构存放在哪里呢? (我回答的是存储在进程的文本区里, 后面听录音才发现错了, 当时脑子真的抽风了, 明显应该是分配在OS的内核空间里的啊, 这个错误犯的太低级了!)</li><li>redis为什么采用单线程? (CPU不是瓶颈)</li><li>你刚才说到执行bgsave命令的时候redis不是单进程, 他创造出来的子进程也是用fork创建的吗? </li><li>说一下redis 分布式锁?  (set nx ex ,redlock)</li><li>讲讲c++多态实现原理?</li></ol><a id="more"></a><p>编程题, 链表之和.</p><p>很简单对吧, 我一开始也是这么想的. 但是最后没a出来. 😭</p><p>分三个操作, 前导0清除, 链表反转, 链表相加.</p><p>问题出在链表反转这里了. while判断条件退出的过于早了. 还是细节掌握的不行.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> val;</span><br><span class="line">    Node next;</span><br><span class="line">    Node(<span class="keyword">int</span> val, Node next)&#123;</span><br><span class="line">        <span class="keyword">this</span>.val = val;</span><br><span class="line">        <span class="keyword">this</span>.next = next;</span><br><span class="line">    &#125;</span><br><span class="line">    Node()&#123;</span><br><span class="line">        <span class="keyword">this</span>(<span class="number">0</span>,<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    Node(<span class="keyword">int</span> val)&#123;</span><br><span class="line">        <span class="keyword">this</span>(val,<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        String ans = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span>(Node i = <span class="keyword">this</span>; i != <span class="keyword">null</span>; i = i.next)&#123;</span><br><span class="line">            ans += i.val;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Node <span class="title">reverse</span><span class="params">(Node head)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(head == <span class="keyword">null</span> || head.next == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> head;</span><br><span class="line">        &#125;</span><br><span class="line">        Node dummyHead = <span class="keyword">new</span> Node(-<span class="number">1</span>, head);</span><br><span class="line">        Node p1 = dummyHead.next;</span><br><span class="line">        Node p2 = dummyHead.next.next;</span><br><span class="line">        <span class="keyword">while</span>(p2.next != <span class="keyword">null</span>)&#123;       <span class="comment">// 应该是 p2 != null</span></span><br><span class="line">            Node tmp = p2.next;</span><br><span class="line">            p2.next = p1;</span><br><span class="line">            p1 = p2;</span><br><span class="line">            p2 = tmp;</span><br><span class="line">        &#125;</span><br><span class="line">        Node newTail = dummyHead.next;</span><br><span class="line">        Node newHead = p2;            <span class="comment">// 应该是 Node newHead = p1</span></span><br><span class="line">        dummyHead.next = newHead;</span><br><span class="line">        newTail.next = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">return</span> dummyHead.next;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Node <span class="title">removeLeadingZero</span><span class="params">(Node a)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(a == <span class="keyword">null</span> || a.next == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> a;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(Node i = a; i != <span class="keyword">null</span>; i = i.next)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i.val != <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Node(<span class="number">0</span>,<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Node <span class="title">add</span><span class="params">(Node a, Node b)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(a == <span class="keyword">null</span> || b == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NullPointerException();</span><br><span class="line">        &#125;</span><br><span class="line">        a = removeLeadingZero(a);</span><br><span class="line">        b = removeLeadingZero(b);</span><br><span class="line">        Node reverse_a = reverse(a);</span><br><span class="line">        Node reverse_b = reverse(b);</span><br><span class="line">        Node ai = reverse_a;</span><br><span class="line">        Node bi = reverse_b;</span><br><span class="line">        <span class="keyword">int</span> carry = <span class="number">0</span>;</span><br><span class="line">        Node resultList = <span class="keyword">new</span> Node(-<span class="number">1</span>,<span class="keyword">null</span>);</span><br><span class="line">        Node resultListTail = resultList;</span><br><span class="line">        <span class="keyword">while</span>(ai != <span class="keyword">null</span> || bi != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> value_a = (ai == <span class="keyword">null</span>) ? <span class="number">0</span> : ai.val;</span><br><span class="line">            <span class="keyword">int</span> value_b = (bi == <span class="keyword">null</span>) ? <span class="number">0</span> : bi.val;</span><br><span class="line">            <span class="keyword">int</span> tmp = (value_a + value_b + carry);</span><br><span class="line">            <span class="keyword">int</span> result = tmp % <span class="number">10</span>;</span><br><span class="line">            carry = tmp / <span class="number">10</span>;</span><br><span class="line">            resultListTail.next = <span class="keyword">new</span> Node(result, <span class="keyword">null</span>);</span><br><span class="line">            resultListTail = resultListTail.next;</span><br><span class="line">            ai = (ai == <span class="keyword">null</span>) ? <span class="keyword">null</span> : ai.next;</span><br><span class="line">            bi = (bi == <span class="keyword">null</span>) ? <span class="keyword">null</span> : bi.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(carry &gt;= <span class="number">1</span>)&#123;</span><br><span class="line">            resultListTail.next = <span class="keyword">new</span> Node(carry, <span class="keyword">null</span>);</span><br><span class="line">            resultListTail = resultListTail.next;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> removeLeadingZero(reverse(resultList.next));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Node a = <span class="keyword">new</span> Node(<span class="number">4</span>);</span><br><span class="line">        Node aa = <span class="keyword">new</span> Node(<span class="number">3</span>,a);</span><br><span class="line">        Node aaa = <span class="keyword">new</span> Node(<span class="number">2</span>,aa);</span><br><span class="line">        Node aaaa = <span class="keyword">new</span> Node(<span class="number">1</span>, aaa);</span><br><span class="line">        Node list_a = <span class="keyword">new</span> Node(<span class="number">0</span>,aaaa); <span class="comment">// 01234</span></span><br><span class="line">        </span><br><span class="line">        Node b = <span class="keyword">new</span> Node(<span class="number">9</span>);</span><br><span class="line">        Node bb = <span class="keyword">new</span> Node(<span class="number">8</span>,b);</span><br><span class="line">        Node bbb = <span class="keyword">new</span> Node(<span class="number">7</span>,bb);</span><br><span class="line">        Node list_b = <span class="keyword">new</span> Node(<span class="number">0</span>,bbb);   <span class="comment">// 0789</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        System.out.println(reverse(removeLeadingZero(list_b)));</span><br><span class="line">        System.out.println(add(list_a, list_b));</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;ol&gt;
&lt;li&gt;自我介绍&lt;/li&gt;
&lt;li&gt;c++用的多吗? (后来才知道组里主要用c++开发的)&lt;/li&gt;
&lt;li&gt;说说hive和mysql有什么区别? 应用场景有什么区别? hive和mysql在执行SQL的时候流程上有什么区别?&lt;/li&gt;
&lt;li&gt;数据倾斜了解吗? 解释一下&lt;/li&gt;
&lt;li&gt;hdfs上的有哪些压缩格式? 说一说他们的区别. (我只用过lzo压缩, 并且不知道原理)&lt;/li&gt;
&lt;li&gt;hive会把所有的SQL都转化为mapreduce吗?  (这里感觉面试官觉得我hive掌握的一般, 就没接着问下去了)&lt;/li&gt;
&lt;li&gt;说一下mysql 聚集索引和非聚集索引区别?&lt;/li&gt;
&lt;li&gt;哪些情况下使用聚集索引效率高, 哪些情况下使用非聚集索引比较高?&lt;/li&gt;
&lt;li&gt;讲一讲联合索引最左结合的规则吧&lt;/li&gt;
&lt;li&gt;假如有一个联合索引(a, b), where条件里面写成&lt;code&gt;b = value_b and a = value_a&lt;/code&gt;这样可以走联合索引吗? (之前没考虑过这个问题, 但是肯定能啊, 假如这点都做不到也太不智能了吧)&lt;/li&gt;
&lt;li&gt;说说jdk1.7和jdk1.8里面的ConcurrentHashMap结构有什么区别?&lt;/li&gt;
&lt;li&gt;说说ConcurrentHashMap里面的加锁类型有哪些?&lt;/li&gt;
&lt;li&gt;讲一讲CAS的原理?&lt;/li&gt;
&lt;li&gt;说一说使用线程池带来的优点? (线程复用, 方便管理)&lt;/li&gt;
&lt;li&gt;你刚才说到了创建和销毁线程的开销很大, 那你来说说开销都花费在了什么地方? 这里我只回答了系统调用产生的开销和内存分配产生的开销.&lt;/li&gt;
&lt;li&gt;你刚才说到了内存分配, 具体分配了哪些内存呢? (线程控制块, 栈内存)&lt;/li&gt;
&lt;li&gt;你刚才说到了线程控制块, 这个数据结构存放在哪里呢? (我回答的是存储在进程的文本区里, 后面听录音才发现错了, 当时脑子真的抽风了, 明显应该是分配在OS的内核空间里的啊, 这个错误犯的太低级了!)&lt;/li&gt;
&lt;li&gt;redis为什么采用单线程? (CPU不是瓶颈)&lt;/li&gt;
&lt;li&gt;你刚才说到执行bgsave命令的时候redis不是单进程, 他创造出来的子进程也是用fork创建的吗? &lt;/li&gt;
&lt;li&gt;说一下redis 分布式锁?  (set nx ex ,redlock)&lt;/li&gt;
&lt;li&gt;讲讲c++多态实现原理?&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="面经" scheme="https://yoursite/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="面经" scheme="https://yoursite/tags/%E9%9D%A2%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>字节跳动大数据开发实习生一面凉经</title>
    <link href="https://yoursite/2021/04/07/%E9%9D%A2%E7%BB%8F/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%B8%80%E9%9D%A2%E5%87%89%E7%BB%8F/"/>
    <id>https://yoursite/2021/04/07/%E9%9D%A2%E7%BB%8F/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%B8%80%E9%9D%A2%E5%87%89%E7%BB%8F/</id>
    <published>2021-04-07T12:35:35.000Z</published>
    <updated>2021-04-07T13:09:20.210Z</updated>
    
    <content type="html"><![CDATA[<p>1  自我介绍</p><p>2  问实习能实习多久</p><p>3  mysql b+树和b树区别, 你刚才说了b+树的优势, b树就没有优势吗?</p><p>4  说说spark的架构和任务提交的流程.</p><p>5  TCP是怎样实现可靠性的? 除了超时重传还有哪些机制?</p><p>6  做个编程题吧</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">给你一棵二叉搜索树（BST）、它的根结点 root 以及目标值 V，把树拆分两部分：其中一个子树中的结点的值不大于目标值V，另一个子树结点的值都大于V， 树中并不一定存在值为V的结点。</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">拆分树的时候，树中的大部分结构要保留，如果原始树中p是c父结点，如果拆分后仍在同一个树中，p仍是c的父结点。</span><br></pre></td></tr></table></figure><p>写了好长时间没写出来, 又换了一个, 还是没做出来. </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">给你一个链表的头节点 head，反复删去链表中总和值为 0 的连续节点组成的序列，直到不存在这样的序列为止。</span><br><span class="line"></span><br><span class="line">删除完毕后，请你返回最终结果链表的头节点。</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">例如：</span><br><span class="line"></span><br><span class="line"> head &#x3D; [ 3, 4, 5, -5, 6]  输出： [3, 4, 6]</span><br><span class="line"></span><br><span class="line"> head &#x3D; [ 3, 4, 5, -5, -4] 输出 : [3]</span><br><span class="line"></span><br><span class="line"> head &#x3D; [ 1, 2, -3, 3, 1]  输出 : [3, 1]  ([1, 2, 1]也对）</span><br></pre></td></tr></table></figure><p>这次凉的很在情理之中, 两个编程题一个都没做出来. </p><p>字节的算法题水平是高, 我leetcode加上剑指一共刷了差不多300道题了, 其他公司的面试编程题基本上都是见过的, 唯独字节的这两个, 见都没见过, 再加上一紧张, 更加做不出来了. 还是要多练习多刷题</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;1  自我介绍&lt;/p&gt;
&lt;p&gt;2  问实习能实习多久&lt;/p&gt;
&lt;p&gt;3  mysql b+树和b树区别, 你刚才说了b+树的优势, b树就没有优势吗?&lt;/p&gt;
&lt;p&gt;4  说说spark的架构和任务提交的流程.&lt;/p&gt;
&lt;p&gt;5  TCP是怎样实现可靠性的? 除了超时重传还有哪些机制?&lt;/p&gt;
&lt;p&gt;6  做个编程题吧&lt;/p&gt;</summary>
    
    
    
    <category term="面经" scheme="https://yoursite/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="面经" scheme="https://yoursite/tags/%E9%9D%A2%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>快手大数据开发实习生三面面经</title>
    <link href="https://yoursite/2021/04/07/%E9%9D%A2%E7%BB%8F/%E5%BF%AB%E6%89%8B%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%B8%89%E9%9D%A2%E9%9D%A2%E7%BB%8F/"/>
    <id>https://yoursite/2021/04/07/%E9%9D%A2%E7%BB%8F/%E5%BF%AB%E6%89%8B%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%B8%89%E9%9D%A2%E9%9D%A2%E7%BB%8F/</id>
    <published>2021-04-07T04:20:27.000Z</published>
    <updated>2021-04-07T04:43:52.073Z</updated>
    
    <content type="html"><![CDATA[<h2 id="面试描述"><a href="#面试描述" class="headerlink" title="面试描述"></a>面试描述</h2><ol><li><p>自我介绍. 自我介绍之前网络十分不好, 垃圾电脑. 劝大家面试前一定检查好网络状况. 否则很影响面试官心情.</p></li><li><p>自我介绍完了之后问<code>看你的专业是大数据分析, 为什么不去做模型做算法</code>?</p></li><li><p>说一下大数据的各个组件和功能吧</p></li><li><p>说一下mapreduce或spark分布式计算的原理</p></li><li><p>写个题吧, three sum, 不能重复, 升序排列. 这里一定要记住去掉重复的组合</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(i &gt; <span class="number">0</span> &amp;&amp; num[i] == num[i-<span class="number">1</span>])&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><p>和</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(left &gt; i + <span class="number">1</span> &amp;&amp; num[left] == num[left - <span class="number">1</span>])&#123;</span><br><span class="line">                    ++left;</span><br><span class="line">                &#125;</span><br><span class="line"><span class="comment">//面试的时候这个条件写错了, 怎么运行都不正确, 后来面试官急着开会, 让我改完发他邮箱, 才发现是这里的问题.</span></span><br><span class="line">应该为 <span class="keyword">while</span>(left &gt; i + <span class="number">1</span> &amp;&amp; left &lt; num.length - <span class="number">1</span> &amp;&amp; num[left] == num[left - <span class="number">1</span>])</span><br></pre></td></tr></table></figure><p>和</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(right &lt; num.length - <span class="number">1</span> &amp;&amp; num[right] == num[right + <span class="number">1</span>])&#123;</span><br><span class="line">                    --right;</span><br><span class="line">                &#125;</span><br><span class="line">应该为 <span class="keyword">while</span>(right &lt; num.length - <span class="number">1</span> &amp;&amp; right &gt; i + <span class="number">1</span> &amp;&amp; num[right] == num[right + <span class="number">1</span>])</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;ArrayList&lt;Integer&gt;&gt; threeSum(<span class="keyword">int</span>[] num) &#123;</span><br><span class="line">        <span class="keyword">if</span>(num == <span class="keyword">null</span> || num.length &lt; <span class="number">3</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ArrayList&lt;ArrayList&lt;Integer&gt;&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        Arrays.sort(num);</span><br><span class="line">        ArrayList&lt;ArrayList&lt;Integer&gt;&gt; ans = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num.length - <span class="number">2</span>; ++i)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i &gt; <span class="number">0</span> &amp;&amp; num[i] == num[i-<span class="number">1</span>])&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> target = -num[i];</span><br><span class="line">            <span class="keyword">int</span> left = i + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">int</span> right = num.length - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(left &lt; right)&#123;</span><br><span class="line">                <span class="keyword">while</span>(left &gt; i + <span class="number">1</span> &amp;&amp; num[left] == num[left - <span class="number">1</span>])&#123;</span><br><span class="line">                    ++left;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">while</span>(right &lt; num.length - <span class="number">1</span> &amp;&amp; num[right] == num[right + <span class="number">1</span>])&#123;</span><br><span class="line">                    --right;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(left &gt;= right)&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">int</span> tmp = num[left] + num[right];</span><br><span class="line">                <span class="keyword">if</span>(tmp == target)&#123;</span><br><span class="line">                    ArrayList&lt;Integer&gt; curr = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">                    curr.add(num[i]);</span><br><span class="line">                    curr.add(num[left]);</span><br><span class="line">                    curr.add(num[right]);</span><br><span class="line">                    System.out.println(curr);</span><br><span class="line">                    ans.add(curr);</span><br><span class="line">                    ++left;</span><br><span class="line">                    --right;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(tmp &gt; target)&#123;</span><br><span class="line">                    --right;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    ++left;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>   总体上面试难度不大, 编程题也不难, 刚看到题的时候立马就想出来思路了. 但是在去重上耽误了太多的时间, 最后没有运行出来. 刚开始面试的时候网络也没调试好, 估计给面试官的体验也不太好, 希望能过吧. </p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;面试描述&quot;&gt;&lt;a href=&quot;#面试描述&quot; class=&quot;headerlink&quot; title=&quot;面试描述&quot;&gt;&lt;/a&gt;面试描述&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;自我介绍. 自我介绍之前网络十分不好, 垃圾电脑. 劝大家面试前一定检查好网络状况. 否则很影响面试官心情.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;自我介绍完了之后问&lt;code&gt;看你的专业是大数据分析, 为什么不去做模型做算法&lt;/code&gt;?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;说一下大数据的各个组件和功能吧&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;说一下mapreduce或spark分布式计算的原理&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;写个题吧, three sum, 不能重复, 升序排列. 这里一定要记住去掉重复的组合&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(i &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; num[i] == num[i-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;和&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(left &amp;gt; i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; num[left] == num[left - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ++left;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//面试的时候这个条件写错了, 怎么运行都不正确, 后来面试官急着开会, 让我改完发他邮箱, 才发现是这里的问题.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;应该为 &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(left &amp;gt; i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; left &amp;lt; num.length - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; num[left] == num[left - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;和&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(right &amp;lt; num.length - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; num[right] == num[right + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    --right;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;应该为 &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(right &amp;lt; num.length - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; right &amp;gt; i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; num[right] == num[right + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="面经" scheme="https://yoursite/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="面经" scheme="https://yoursite/tags/%E9%9D%A2%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>腾讯运营开发实习生二面面经</title>
    <link href="https://yoursite/2021/04/06/%E9%9D%A2%E7%BB%8F/%E8%85%BE%E8%AE%AF%E8%BF%90%E8%90%A5%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%BA%8C%E9%9D%A2%E9%9D%A2%E7%BB%8F/"/>
    <id>https://yoursite/2021/04/06/%E9%9D%A2%E7%BB%8F/%E8%85%BE%E8%AE%AF%E8%BF%90%E8%90%A5%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%BA%8C%E9%9D%A2%E9%9D%A2%E7%BB%8F/</id>
    <published>2021-04-06T15:33:55.000Z</published>
    <updated>2021-04-09T10:53:25.230Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>自我介绍</p></li><li><p>简单问了下项目, 因为面试官也不是搞后端的, 没太深入的问.</p></li><li><p>问了下MySQL有哪些引擎, innodb和myisam有什么区别</p></li><li><p>熟悉linux吗? 实习里shell中一般用linux哪些命令</p></li><li><p>怎么查看服务器的负载情况? <code>top</code>, top命令的前3行包含什么信息?</p></li><li><p>怎么查找一个名为a.txt的文件在哪个位置? <code>find / -name &quot;a.txt&quot;</code></p></li><li><p>浏览器中输入<code>www.qq.com</code>会发生什么, 流程说一下</p></li><li><p>http返回值502错误码代表什么意思</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">然后又介绍了对方的组. 面试半小时就结束了, 出奇的快.</span><br><span class="line">总体感觉就是面试官会的我不会, 我擅长的面试官不擅长. java没问, 大数据没问, 编程题也没问.</span><br><span class="line">希望能过吧.</span><br><span class="line">本来以为运营开发是和数据开发一样的工作, 现在看起来很像运维开发.</span><br><span class="line">但是很想和进去体验一下啊, 容器化,微服务,k8s,听起来就很cool的样子😈😈.</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;自我介绍&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;简单问了下项目, 因为面试官也不是搞后端的, 没太深入的问.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;问了下MySQL有哪些引擎, innodb和myisam有什么区别&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;熟悉linux</summary>
      
    
    
    
    <category term="面经" scheme="https://yoursite/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="面经" scheme="https://yoursite/tags/%E9%9D%A2%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>腾讯运营开发实习生一面面经</title>
    <link href="https://yoursite/2021/04/03/%E9%9D%A2%E7%BB%8F/%E8%85%BE%E8%AE%AF%E8%BF%90%E8%90%A5%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%B8%80%E9%9D%A2%E9%9D%A2%E7%BB%8F/"/>
    <id>https://yoursite/2021/04/03/%E9%9D%A2%E7%BB%8F/%E8%85%BE%E8%AE%AF%E8%BF%90%E8%90%A5%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%B8%80%E9%9D%A2%E9%9D%A2%E7%BB%8F/</id>
    <published>2021-04-03T08:23:57.000Z</published>
    <updated>2021-04-06T15:33:06.243Z</updated>
    
    <content type="html"><![CDATA[<ol><li>自我介绍</li><li>查找进程id <code>ps -ef | grep &quot;process_name&quot;</code></li><li>刚才的ps命令里参数<code>-e</code>和<code>-f</code>是什么意思</li><li>ps 命令里大写的 <code>-E</code>参数和<code>-e</code>有什么区别</li><li>查看端口号的命令?</li><li><code>netstat</code>命令用过吗? 做什么的. (用过, 但干什么的忘了)</li><li><code>lsof</code>命令?（我听都没听说过）</li><li>查看cpu,内存的命令? (top, free)</li><li>查看磁盘使用情况的命令?(<code>df</code>, 我一开始回答的<code>du</code>, 后来问du和df的区别的时候才指出我说反了) </li><li><code>du</code>和<code>df</code>区别?</li></ol><a id="more"></a><ol start="11"><li><code>top</code>命令如何查看具体某一核的cpu使用情况? ( 不会 )</li><li>平常用哪些命令抓包? 我回答的是(<code>curl</code>和<code>nc</code>命令, 面试官说不是, 但还是让我解释这两个命令的区别)</li><li>抓包工具会吗? (tcpdump) (我只会用chrome浏览器inspect抓包, 面试官说这样的话tcp报文抓不到. 这不废话吗当然抓不到了, 我又不是网络工程师抓tcp包干啥)</li><li>面试官问git用过吗? 我回答用过, 写一个git语句吧, <code>把feature分支合并到master分支</code>. 不会. 平常实习的时候只用add commit push merge. (<strong>垃圾网易</strong>, 实习生连合并分支的权限都没有, 只能自己创建个分支自己玩)</li><li>git rebase 了解吗? (不了解)</li><li>git 查看commit id用什么命令(git log)</li><li>进程和线程区别?</li><li>讲一下上下文切换?</li><li>数据库用的多吗? 非关系型数据库用过吗?</li><li>讲一下mysql事务机制</li><li>写两个sql, 贼简单, 和之前的面试问的sql都不是同一级别的. select * from table order by column1; select column2 from table group by column2;  刚学sql的都会</li><li>http常用状态码？</li><li>301, 302有什么区别, 403代表什么意思, 502的<code>bad gateway</code>能解释下吗.  (都不会)</li><li>http报文格式说一下</li><li>http请求体中<code>content-type</code>和<code>data-format</code>两个参数什么意思    (也不会)</li><li>https 和 http有什么区别</li><li><code>curl -vvv https://qq.com</code> 这个过程中讲一下, 要建立几次TCP连接?</li><li>最后面试官问了个非常简单的面试问题, 估计是觉得问难的我也答不上来了吧. 说一下TCP三次握手四次挥手</li></ol><p>编程题是LFU的设计, 之前在leetcode上面做过LRU的, 这个比LRU复杂一点, 想了一会, 感觉就是LRU里面的链表节点再加上一个cnt变量表示访问的次数, 并且是降序排序的. 每一次就剔除掉链表最后一个节点</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line">LFU缓存结构设计</span><br><span class="line">一个缓存结构需要实现如下功能。</span><br><span class="line">set(key, value)：将记录(key, value)插入该结构</span><br><span class="line">get(key)：返回key对应的value值</span><br><span class="line">但是缓存结构中最多放K条记录，如果新的第K+<span class="number">1</span>条记录要加入，就需要根据策略删掉一条记录，然后才能把新记录加入。这个策略为：在缓存结构的K条记录中，哪一个key从进入缓存结构的时刻开始，被调用set或者get的次数最少，就删掉这个key的记录；</span><br><span class="line">如果调用次数最少的key有多个，上次调用发生最早的key被删除</span><br><span class="line">    这就是LFU缓存替换算法。实现这个结构，K作为参数给出</span><br><span class="line">[要求]</span><br><span class="line">set和get方法的时间复杂度为O(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LFU</span> </span>&#123;</span><br><span class="line">    LFU(<span class="keyword">int</span> K)&#123;</span><br><span class="line">        maxSize = K;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> maxSize;</span><br><span class="line">    Map&lt;Integer, ListNode&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="keyword">int</span> size = <span class="number">0</span>;</span><br><span class="line">    ListNode listHead = <span class="keyword">new</span> ListNode();</span><br><span class="line">    ListNode listTail = listHead;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> key)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(map.containsKey(key))&#123;</span><br><span class="line">            ListNode node = map.get(key);</span><br><span class="line">            node.cnt++;</span><br><span class="line">            ListNode currNode = node;</span><br><span class="line">            ListNode prevNode = node.prev;</span><br><span class="line">            <span class="keyword">while</span>(prevNode != <span class="keyword">null</span> &amp;&amp; currNode.cnt &gt; prevNode.cnt)&#123;</span><br><span class="line">                <span class="comment">//swap curr and prev</span></span><br><span class="line">                swap(prevNode,currNode);</span><br><span class="line">                prevNode = currNode.prev;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> currNode.value;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Exception();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set</span><span class="params">(<span class="keyword">int</span> key, <span class="keyword">int</span> value)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(map.containsKey(key))&#123;</span><br><span class="line">            ListNode node = map.get(key);</span><br><span class="line">            node.cnt++;</span><br><span class="line">            node.value = value;</span><br><span class="line">            ListNode currNode = node;</span><br><span class="line">            ListNode prevNode = node.prev;</span><br><span class="line">            <span class="keyword">while</span>(prevNode != <span class="keyword">null</span> &amp;&amp; currNode.cnt &gt; prevNode.cnt)&#123;</span><br><span class="line">                <span class="comment">//swap curr and prev</span></span><br><span class="line">                swap(prevNode,currNode);</span><br><span class="line">                prevNode = currNode.prev;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> currNode.value;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(size == maxSize)&#123;</span><br><span class="line">                ListNode leastNode = listTail;</span><br><span class="line">                <span class="comment">//remove leastNode</span></span><br><span class="line">                map.remove(listTail.key);</span><br><span class="line">                listTail = leastNode.prev;</span><br><span class="line">                listTail.next = <span class="keyword">null</span>;</span><br><span class="line">                leastNode.prev = <span class="keyword">null</span>;</span><br><span class="line">                --size;</span><br><span class="line">            &#125;</span><br><span class="line">            ListNode newNode = <span class="keyword">new</span> ListNode(key,value);</span><br><span class="line">            map.set(key,newNode);</span><br><span class="line">            listTail.next = newNode;</span><br><span class="line">            newNode.prev = listTail;</span><br><span class="line">            listTail = newNode;</span><br><span class="line">            ++size;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(ListNode, n1, ListNode n2)</span></span>&#123;</span><br><span class="line">        ListNode n1_prev = n1.prev;</span><br><span class="line">        ListNode n2_next = n2.next;</span><br><span class="line">        n1_prev.next = n2;</span><br><span class="line">        n2_next.prev = n1;</span><br><span class="line">        n2.next = n1;</span><br><span class="line">        n2.prev = n1_prev;</span><br><span class="line">        n1.next = n2_next;</span><br><span class="line">        n1.prev = n2;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ListNode</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> cnt;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> value;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> key;</span><br><span class="line">        <span class="keyword">public</span> ListNode next;</span><br><span class="line">        <span class="keyword">public</span> ListNode prev;</span><br><span class="line">        ListNode(<span class="keyword">int</span> value, <span class="keyword">int</span> key)&#123;</span><br><span class="line">            <span class="keyword">this</span>.value = value;</span><br><span class="line">            <span class="keyword">this</span>.key = key;</span><br><span class="line">        &#125;</span><br><span class="line">        ListNode()&#123;</span><br><span class="line">            <span class="keyword">this</span>(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;ol&gt;
&lt;li&gt;自我介绍&lt;/li&gt;
&lt;li&gt;查找进程id &lt;code&gt;ps -ef | grep &amp;quot;process_name&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;刚才的ps命令里参数&lt;code&gt;-e&lt;/code&gt;和&lt;code&gt;-f&lt;/code&gt;是什么意思&lt;/li&gt;
&lt;li&gt;ps 命令里大写的 &lt;code&gt;-E&lt;/code&gt;参数和&lt;code&gt;-e&lt;/code&gt;有什么区别&lt;/li&gt;
&lt;li&gt;查看端口号的命令?&lt;/li&gt;
&lt;li&gt;&lt;code&gt;netstat&lt;/code&gt;命令用过吗? 做什么的. (用过, 但干什么的忘了)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lsof&lt;/code&gt;命令?（我听都没听说过）&lt;/li&gt;
&lt;li&gt;查看cpu,内存的命令? (top, free)&lt;/li&gt;
&lt;li&gt;查看磁盘使用情况的命令?(&lt;code&gt;df&lt;/code&gt;, 我一开始回答的&lt;code&gt;du&lt;/code&gt;, 后来问du和df的区别的时候才指出我说反了) &lt;/li&gt;
&lt;li&gt;&lt;code&gt;du&lt;/code&gt;和&lt;code&gt;df&lt;/code&gt;区别?&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="面经" scheme="https://yoursite/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="面经" scheme="https://yoursite/tags/%E9%9D%A2%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>快手大数据开发实习生二面面经</title>
    <link href="https://yoursite/2021/04/01/%E9%9D%A2%E7%BB%8F/%E5%BF%AB%E6%89%8B%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%BA%8C%E9%9D%A2%E9%9D%A2%E7%BB%8F/"/>
    <id>https://yoursite/2021/04/01/%E9%9D%A2%E7%BB%8F/%E5%BF%AB%E6%89%8B%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%BA%8C%E9%9D%A2%E9%9D%A2%E7%BB%8F/</id>
    <published>2021-04-01T02:28:22.000Z</published>
    <updated>2021-04-01T14:11:15.496Z</updated>
    
    <content type="html"><![CDATA[<h2 id="面试描述"><a href="#面试描述" class="headerlink" title="面试描述"></a>面试描述</h2><ol><li><p>自我介绍</p></li><li><p>自我介绍完了之后什么都没问直接让写题. 大数相减：给定字符串表示的两个正整数，长度很长，求差值。 和面试官交流后得知字符串中只含0-9的字符, 并且没有前导0, 即没有”000102”这种情况.</p><p><code>String subtract(String a, String b)</code></p><p>结果一定要注意去除前导0, 比如<code>10000-9999</code>这样的, 要把前面的0去掉 我一开始就忘了, 在面试官提醒下才想起来</p></li></ol><a id="more"></a><ol start="3"><li><p>写SQL.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">sql：给定一个访问的hive表</span><br><span class="line">user_id, timestamp,... p_date     p_date是分区字段</span><br><span class="line">要求次日留存，结果给我user_id的集合</span><br><span class="line"><span class="comment">--- 留存是指的当天和昨天都访问了的用户, 实际上就是把今天用户的集合和昨天用户的集合取个交集就完事. 一开始还想着用窗口函数, 后来发现没这么麻烦.</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> todayUser.user_id <span class="keyword">from</span> </span><br><span class="line">(</span><br><span class="line">    <span class="keyword">select</span> user_id, <span class="keyword">min</span>(p_date) <span class="keyword">from</span> hiveTable <span class="keyword">where</span> p_date = <span class="string">&quot;$&#123;today&#125;&quot;</span> </span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> user_id </span><br><span class="line">) <span class="keyword">as</span> todayUser <span class="keyword">inner</span> <span class="keyword">join</span> </span><br><span class="line">(</span><br><span class="line">    <span class="keyword">select</span> user_id, <span class="keyword">min</span>(p_date) <span class="keyword">from</span> hiveTable <span class="keyword">where</span> p_date = <span class="string">&quot;$&#123;yesterday&#125;&quot;</span> </span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> user_id </span><br><span class="line">) <span class="keyword">as</span> yesterdayUser</span><br><span class="line"><span class="keyword">on</span> todayUser.user_id = yesterdayUser.user_id;</span><br></pre></td></tr></table></figure></li><li><p>讲一讲刚才的Hive SQL语句如果放到spark里面执行的过程是怎么样的? (<strong>注意, 从hive中取数的时候要根据p_date是分区字段来取, 而不是读取全部的hive数据再用filter()算子过滤</strong>)</p></li><li><p>Scala和Java比有什么不一样的地方?</p></li><li><p>介绍一下Scala的模式匹配</p></li><li><p>Spark惰性执行的优点有什么?</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function">String <span class="title">subtract</span><span class="params">(String a, String b)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(a == <span class="keyword">null</span> || b == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NullPointerException();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">&quot;&quot;</span>.equals(a) || <span class="string">&quot;&quot;</span>.equals(b))&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException();</span><br><span class="line">        &#125;</span><br><span class="line">        String ans = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">boolean</span> isNegative = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(a.length() &gt; b.length())&#123;</span><br><span class="line">            ans = sub(a,b);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a.length() &lt; b.length())&#123;</span><br><span class="line">            ans = sub(b,a);</span><br><span class="line">            isNegative = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(a.compareTo(b) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                ans = sub(a,b);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(a.compareTo(b) &lt; <span class="number">0</span>)&#123;</span><br><span class="line">                ans = sub(b,a);</span><br><span class="line">                isNegative = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">&quot;0&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (isNegative) ? <span class="string">&quot;-&quot;</span> + ans : ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">sub</span><span class="params">(String a, String b)</span></span>&#123;</span><br><span class="line">        StringBuilder sba = <span class="keyword">new</span> StringBuilder(a).reverse();</span><br><span class="line">        StringBuilder sbb = <span class="keyword">new</span> StringBuilder(b).reverse();</span><br><span class="line">        StringBuilder ans = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">int</span> carry = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sba.length(); ++i)&#123;</span><br><span class="line">            <span class="keyword">int</span> ai = sba.charAt(i) - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">            <span class="keyword">int</span> bi = (i &lt; sbb.length()) ? sbb.charAt(i) - <span class="string">&#x27;0&#x27;</span> : <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(ai &lt; bi + carry)&#123;</span><br><span class="line">                ai += <span class="number">10</span>;</span><br><span class="line">                ans.append(ai - bi - carry + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">                carry = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                ans.append(ai - bi - carry + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(carry == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException();</span><br><span class="line">        &#125;</span><br><span class="line">        String ans1 = ans.reverse().toString();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ans1.length(); ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(ans1.charAt(i) != <span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> ans1.substring(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;0&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//Scanner in = new Scanner(System.in);</span></span><br><span class="line">        <span class="comment">//int a = in.nextInt();</span></span><br><span class="line">        <span class="comment">//System.out.println(a);</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;面试描述&quot;&gt;&lt;a href=&quot;#面试描述&quot; class=&quot;headerlink&quot; title=&quot;面试描述&quot;&gt;&lt;/a&gt;面试描述&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;自我介绍&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;自我介绍完了之后什么都没问直接让写题. 大数相减：给定字符串表示的两个正整数，长度很长，求差值。 和面试官交流后得知字符串中只含0-9的字符, 并且没有前导0, 即没有”000102”这种情况.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;String subtract(String a, String b)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;结果一定要注意去除前导0, 比如&lt;code&gt;10000-9999&lt;/code&gt;这样的, 要把前面的0去掉 我一开始就忘了, 在面试官提醒下才想起来&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="面经" scheme="https://yoursite/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="面经" scheme="https://yoursite/tags/%E9%9D%A2%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>快手大数据开发实习生一面面经</title>
    <link href="https://yoursite/2021/03/30/%E9%9D%A2%E7%BB%8F/%E5%BF%AB%E6%89%8B%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%B8%80%E9%9D%A2%E9%9D%A2%E7%BB%8F/"/>
    <id>https://yoursite/2021/03/30/%E9%9D%A2%E7%BB%8F/%E5%BF%AB%E6%89%8B%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%B8%80%E9%9D%A2%E9%9D%A2%E7%BB%8F/</id>
    <published>2021-03-30T02:28:22.000Z</published>
    <updated>2021-04-01T13:31:30.031Z</updated>
    
    <content type="html"><![CDATA[<h2 id="面试描述"><a href="#面试描述" class="headerlink" title="面试描述"></a>面试描述</h2><p>这次还是挺悬的, 幸亏编程题想出来了, 想不出来就gg了</p><ol><li>自我介绍</li><li>问了实习中做的工作内容, 实习里面spark怎么用什么的</li><li>spark了解的多吗, 讲一讲spark执行任务的流程</li><li>从哪里可以看出spark executor里面任务的执行情况?</li><li>又问到DAG图执行的过程, 这里我没太懂面试官的意思, 心想DAG图还有什么执行过程? 然后就回答从textFile()方法或者persist()开始. 后来听面试官的解答才知道问的不是这个, 问的知识点是RDD的<strong>惰性执行操作</strong>. 从最后一个rdd开始求出需要什么父rdd, 然后依次向前执行, 不action不执行.</li><li>实习里面kafka怎么用的?</li><li>kafka实现高可用的方式?(分区机制, leader和follower,ack参数)</li><li>kafka选举?(kafka控制器, leader epoch)</li><li>Java线程池(7个参数, 提交一个任务会经过怎样的流程)</li><li>JVM垃圾回收算法. (说了三种, 和CMS收集器). 又让讲讲G1收集器</li></ol><a id="more"></a><p>编程题问的是<strong>复原ip地址</strong>. 也是很经典的一道题了. leetcode 93</p><p>但这道题很久之前做过的, 有点忘了. 幸亏面试的时候想起来了, 不然又gg了.</p><p>需要的边界条件还是比较多的. 要考虑每一组ip是不是0开头, 是不是大于255, 遍历完之后ip段数是不是小于4或大于4, 这些情况都是需要剪枝排除掉的. 我写的时候忘考虑<strong>ip段数是不是小于4</strong>这个条件了. 还好写完之后只让讲思路, 要不然现场写bug太尴尬了.</p><p>最后问面试官评价, 面试官说基础掌握的还可以, 但是不深入, 源码看的少(事实上我之前根本没看过spark源码). 以后还是要多学源码多深入吧.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;List&lt;String&gt;&gt; string2ips(String s)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s == <span class="keyword">null</span> || <span class="string">&quot;&quot;</span>.equals(s))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;List&lt;String&gt;&gt; ans = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        List&lt;String&gt; curr = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">        dfs(ans, curr, index, s);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(List&lt;List&lt;String&gt;&gt; ans, List&lt;String&gt; curr, <span class="keyword">int</span> index, String s)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(index == s.length() &amp;&amp; curr.size() == <span class="number">4</span>)&#123;</span><br><span class="line">            ans.append(curr);          <span class="comment">// 这里应该是 ans.append(new ArrayList&lt;String&gt;(curr));</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(curr.size() &gt; <span class="number">4</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">char</span> ch = s.charAt(index);</span><br><span class="line">        String last = curr.get(curr.size() - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span>(ch == <span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">            String last_new = last + ch;</span><br><span class="line">            <span class="keyword">if</span>(Integer.valueOf(last) &lt;= <span class="number">255</span>)&#123;</span><br><span class="line">                curr.set(curr.size()-<span class="number">1</span>, last_new);</span><br><span class="line">                dfs(ans, curr, index + <span class="number">1</span>, s);</span><br><span class="line">                curr.set(curr.size()-<span class="number">1</span>, last);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            last = last + ch;         <span class="comment">// 这里应该是 String last_new = last + ch;</span></span><br><span class="line">            <span class="keyword">if</span>(Integer.valueOf(last) &lt;= <span class="number">255</span>)&#123;</span><br><span class="line">                curr.set(curr.size()-<span class="number">1</span>, last_new);</span><br><span class="line">                dfs(ans, curr, index + <span class="number">1</span>, s);</span><br><span class="line">                curr.set(curr.size()-<span class="number">1</span>, last);</span><br><span class="line">            &#125;</span><br><span class="line">            curr.add(String.valueOf(ch));</span><br><span class="line">            dfs(ans, curr, index + <span class="number">1</span>, s);</span><br><span class="line">            curr.remove(curr.size() - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;面试描述&quot;&gt;&lt;a href=&quot;#面试描述&quot; class=&quot;headerlink&quot; title=&quot;面试描述&quot;&gt;&lt;/a&gt;面试描述&lt;/h2&gt;&lt;p&gt;这次还是挺悬的, 幸亏编程题想出来了, 想不出来就gg了&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;自我介绍&lt;/li&gt;
&lt;li&gt;问了实习中做的工作内容, 实习里面spark怎么用什么的&lt;/li&gt;
&lt;li&gt;spark了解的多吗, 讲一讲spark执行任务的流程&lt;/li&gt;
&lt;li&gt;从哪里可以看出spark executor里面任务的执行情况?&lt;/li&gt;
&lt;li&gt;又问到DAG图执行的过程, 这里我没太懂面试官的意思, 心想DAG图还有什么执行过程? 然后就回答从textFile()方法或者persist()开始. 后来听面试官的解答才知道问的不是这个, 问的知识点是RDD的&lt;strong&gt;惰性执行操作&lt;/strong&gt;. 从最后一个rdd开始求出需要什么父rdd, 然后依次向前执行, 不action不执行.&lt;/li&gt;
&lt;li&gt;实习里面kafka怎么用的?&lt;/li&gt;
&lt;li&gt;kafka实现高可用的方式?(分区机制, leader和follower,ack参数)&lt;/li&gt;
&lt;li&gt;kafka选举?(kafka控制器, leader epoch)&lt;/li&gt;
&lt;li&gt;Java线程池(7个参数, 提交一个任务会经过怎样的流程)&lt;/li&gt;
&lt;li&gt;JVM垃圾回收算法. (说了三种, 和CMS收集器). 又让讲讲G1收集器&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="面经" scheme="https://yoursite/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="面经" scheme="https://yoursite/tags/%E9%9D%A2%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>网易有道大数据开发实习生二面面经</title>
    <link href="https://yoursite/2020/12/23/%E9%9D%A2%E7%BB%8F/%E7%BD%91%E6%98%93%E6%9C%89%E9%81%93%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%BA%8C%E9%9D%A2%E9%9D%A2%E7%BB%8F/"/>
    <id>https://yoursite/2020/12/23/%E9%9D%A2%E7%BB%8F/%E7%BD%91%E6%98%93%E6%9C%89%E9%81%93%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%BA%8C%E9%9D%A2%E9%9D%A2%E7%BB%8F/</id>
    <published>2020-12-23T12:43:44.000Z</published>
    <updated>2021-03-21T09:21:55.944Z</updated>
    
    <content type="html"><![CDATA[<h2 id="面试介绍"><a href="#面试介绍" class="headerlink" title="面试介绍"></a>面试介绍</h2><p>应该是近期最后一场面试了. 面试官人很好, 就是约面试太慢了. 我12.09投的简历, 12.17才开始的一面, 12.22才开始的二面. 相比之下网易传媒就快很多, 12.09投的简历, 12.11一面, 12.14二面. 以至于我答应下来了offer这边的面试还没开始.</p><h2 id="面试内容"><a href="#面试内容" class="headerlink" title="面试内容"></a>面试内容</h2><p>首先还是按套路出牌, 自我介绍. 介绍完了之后面试官问大数据开发有很多领域, 对哪些感兴趣, 我回答的是偏业务的开发, 而不是数据仓库的开发和运维.</p><ul><li>问的第一个就是如何用mapreduce实现下面的问题</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">假如有很大的数据, 比如4TB, 数据中每一行有多个列. 现在要求出对于指定的第i列, 求出所有行的第i列的数据之和</span><br></pre></td></tr></table></figure><a id="more"></a><p>我一开始的解答就是把每一行的第i列的元素作为value, 给定一个常数1作为key, 进行reduce操作. 并且使用combiner. 我的理解是使用combiner就可以避免map端生成过多的key. 因为key只有1个, 所以在各个阶段进行combine之后传递给reducer的key就变得很少了. 因为在溢写的时候和归并排序的时候都会进行combiner. </p><p>面试官仍然问了把所有的数据集中在一个节点上会不会造成数据倾斜的问题, 我觉得除非是因为map任务太多, 要不然应该不会数据倾斜的. 不然根据默认的配置, 溢写文件大于3个就会在归并的时候再次进行combine操作. 所以每个map端最多生成3个文件传递给reducer.</p><p>然后还说了下spark中的解决方法就是用累加器.</p><ul><li>第二个问题, 对垃圾回收的理解.</li></ul><p>我当时听到垃圾回收这四个字, 心里就凉了. 因为我jvm还没学. (确实是我太不应该了, 既然给面试官说以后选java方向, 但是连jvm都不会也太说不过去了, 等这学期期末忙完就开始学jvm). 然后就说了些大概的, 不系统的知识吧, 因为之前学C++的时候学过智能指针, 知道引用计数的实现方式和优缺点. 所以就说了些引用计数, 对象头, 弱引用什么的. 可能说的有些地方也不太对. </p><ul><li>然后就又到了写SQL的时候了, 给定一个表log, 里面记录了用户id, 用户触发某个事件的id, 及触发这个事件的时间.</li></ul><p>要统计每一天中新用户的数量. (新用户就是指uid第一次出现, 之前的记录中uid没有出现过的用户)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  timestamp uid  eventid</span></span><br><span class="line"><span class="comment"># log</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> timeToDate(<span class="string">`date1`</span>) <span class="keyword">as</span> <span class="string">`date`</span>, <span class="keyword">count</span>(*) - <span class="keyword">count</span>(date2) <span class="keyword">as</span> newUserCount <span class="keyword">from</span> </span><br><span class="line">(<span class="keyword">select</span> t1.<span class="string">`timestamp`</span> <span class="keyword">as</span> <span class="string">`date1`</span>, </span><br><span class="line">t2.<span class="string">`timestamp`</span> <span class="keyword">as</span> <span class="string">`date2`</span>, </span><br><span class="line">t1.uid <span class="keyword">as</span> <span class="string">`uid`</span> <span class="keyword">from</span> <span class="keyword">log</span> <span class="keyword">as</span> t1 <span class="keyword">left</span> <span class="keyword">join</span> <span class="keyword">log</span> <span class="keyword">as</span> t2 <span class="keyword">on</span> t1.uid = t2.uid <span class="keyword">and</span> t1.<span class="string">`timestamp`</span> &gt; t2.<span class="string">`timestamp`</span>) <span class="keyword">as</span> tmpTable</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="string">`date`</span>;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我的想法是左连接*<em>(其实这题我知道用窗口函数更简单, 但我忘了选择某个列的前一个记录对应的窗口函数名是什么了, 所以没敢说)**, 连接的条件就是左表的id等于右表的id, 并且左表的时间大于右表的时间. 这样, 如果左表中的某一列是该id第一个记录的话, 那么不存在某一条右表记录, 使得左表的时间大于右表的时间. 即右表的部分为NULL. 我们按天来统计NULL的个数就能发现当天新用户的数量了. 也解释了下count(</em>)是会统计NULL的行的数量, 而count(date2)不会, 所以相减就可以得到NULL行的个数了</p><p>然后面试官说这样的逻辑对, 但是有没有什么问题. 那肯定是性能有问题, 我说了一下连接操作, count操作, group by操作都需要遍历.非常耗时间. (然后还有的问题就说连接产生的临时表会非常大, 因为左表的一行可能被右表连接了好几次, 这点我面试的时候没意识到, 面完才想到). </p><p>又问解决的方法, 我给出了两种, 第一种就是再添一列, 记录相同id的上一行记录. 如果没有上一行记录, 就说明当前是一个新用户. 类似于链表指针. 第二种方法就是用窗口函数. 我也只是知道窗口函数能做这个问题, 至于怎么写就不会了, 也幸亏面试官没让我写.</p><p>然后接下来就没问什么专业性的问题了, 就是聊天了, 面试官介绍了大数据开发的几个方向吧, 然后问问我喜欢什么, 我也问了面试官组里主要是负责有道的什么部分. 感觉不太是我想要去的岗位. 而且已经接受了另外的offer了, 最后在微信上就婉拒了. 不得不说有道的面试都是这样的吗? 要面试官提前联系面试者, hr什么都不管?</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;面试介绍&quot;&gt;&lt;a href=&quot;#面试介绍&quot; class=&quot;headerlink&quot; title=&quot;面试介绍&quot;&gt;&lt;/a&gt;面试介绍&lt;/h2&gt;&lt;p&gt;应该是近期最后一场面试了. 面试官人很好, 就是约面试太慢了. 我12.09投的简历, 12.17才开始的一面, 12.22才开始的二面. 相比之下网易传媒就快很多, 12.09投的简历, 12.11一面, 12.14二面. 以至于我答应下来了offer这边的面试还没开始.&lt;/p&gt;
&lt;h2 id=&quot;面试内容&quot;&gt;&lt;a href=&quot;#面试内容&quot; class=&quot;headerlink&quot; title=&quot;面试内容&quot;&gt;&lt;/a&gt;面试内容&lt;/h2&gt;&lt;p&gt;首先还是按套路出牌, 自我介绍. 介绍完了之后面试官问大数据开发有很多领域, 对哪些感兴趣, 我回答的是偏业务的开发, 而不是数据仓库的开发和运维.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;问的第一个就是如何用mapreduce实现下面的问题&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;假如有很大的数据, 比如4TB, 数据中每一行有多个列. 现在要求出对于指定的第i列, 求出所有行的第i列的数据之和&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="面经" scheme="https://yoursite/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="面经" scheme="https://yoursite/tags/%E9%9D%A2%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>网易有道大数据开发实习生一面面经</title>
    <link href="https://yoursite/2020/12/17/%E9%9D%A2%E7%BB%8F/%E7%BD%91%E6%98%93%E6%9C%89%E9%81%93%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%B8%80%E9%9D%A2%E9%9D%A2%E7%BB%8F/"/>
    <id>https://yoursite/2020/12/17/%E9%9D%A2%E7%BB%8F/%E7%BD%91%E6%98%93%E6%9C%89%E9%81%93%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%B8%80%E9%9D%A2%E9%9D%A2%E7%BB%8F/</id>
    <published>2020-12-17T10:02:21.000Z</published>
    <updated>2020-12-19T15:15:43.900Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-面试描述"><a href="#1-面试描述" class="headerlink" title="1. 面试描述"></a>1. 面试描述</h2><p>这是我人生的第三次面试. 投的这两家网易的大数据开发实习岗都接到面试通知了, 但是没想到爱奇艺竟然在简历关挂了, 给我的理由是人已经招满了. 不知道是真的招满了还是简历关就被刷了.</p><a id="more"></a><p>首先面试还是自我介绍, 和前面的面试不同, 这个面试官问项目问的很细, 问了项目的功能, 架构, </p><p>还有就是相比较其他的现成的股票分析网站有什么优势.</p><p>然后问到了怎么解决mysql中数据量非常大之后的性能下降问题, 答案是建索引和分库分表**(这里幸亏前几天吃麻辣香锅的时候等位无聊看的mysql分表的知识了, 要不然就gg了)**</p><p>然后问到数据量这么大有没有考虑用HDFS, Hive来进行存储和查询, 回答肯定是没有的. 因为我自己就一台电脑, 用了也等于没用.</p><p>又反问到学校实验室没有提供资源来搭建集群? 回答就是需要导师的经费, 项目不是导师的, 没让买</p><p>最后问的是项目中碰到的困难 1. WSL装MySQL   2. http连接池   3. log4j </p><p>然后问到爬虫爬这么快会不会被限制, 我说明了robots协议里面确实没有限制, 然后又提到b站的爬虫是有限制的, 爬取次数快就会被封, 要使用ip池. </p><p>然后又被问到为什么不使用八爪鱼这样的现成的爬虫应用, 而是自己定义一个. 回答是可以八爪鱼的优点是可以爬取反爬虫机制比较高的网站, 我爬的这个不需要. 并且自己写爬虫根据自己的需求来自定义, 灵活度高, (其实八爪鱼我也没用过, )</p><p>接下来就说要问基础知识了, 第一个问的是数组和链表的区别, 和应用场景(我心想这也太基础了吧, 大一大二的学生都能答上来). 我的回答是数组用于一般的list, 因为数组可以随机访问, 比链表快, 并且数组经过ArrayList这样的动态扩容类修饰之后也解决了不能扩容的问题了. 并且扩容比LinkedList更快(因为ArrayList只有在满了的时候才会new新的数组, LinkedList每一次add都会new新的节点, 频繁的调用new与内核打交道非常耗费时间), 也提到了数组可以利用缓存达到遍历读取更快的效果.</p><p>应用场景就回答的大部分情况用ArrayList. (因为我觉得LiknedList在插入和删除方面的优势真的体现不出来, 你插入一个元素总得定位到一个位置吧, 定位的这个过程就O(n)了, 插入是O(1)有什么用? 删除的时候总得先找到要删除哪个元素吧, 这个过程也是O(n). ), 需要用到双端队列的时候采用LinkedList, 来实现Queue或Stack.</p><p>然后就又是经典的topK问题了, 1亿个数选前k个最大的. 我问的是这些数是不是存在同一台机器上的, 回答是存在同一台机器上, 然后又问内存能不能把这些数全读进来, 面试官让我两种情况都讨论一下, 那就很简单了, 不能全读到内存中用堆存储前k个最大的, 扫描一遍即可. 复杂度O(n*logk). 能读到内存中就用快速排序的思想, 复杂度O(n)</p><p>然后又问MySQL索引, 我就只说了InnoDB的索引, 聚簇索引和非聚簇索引. 然后说了下索引树叶子节点和MyISAM的区别, 非聚簇索引的回表查询, B树和B+树的区别…</p><p>然后让写了几个SQL, </p><p>第一个问题就是有个表, 列中是uid, date, level, 表示哪个用户在什么时间通过了哪一个关卡. 让求2020.11月每一个用户, 每天通过的关卡数量.  这个简单, 我感觉主要就是考察group by和聚合函数吧. 没什么难的. </p><p>但是尴尬的是, 面试官没说这个表的名字是什么, 我写的时候也忘了写<code>from</code>子句了. 还好面试官提醒我让我检查检查. </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># uid date level</span></span><br><span class="line"><span class="comment"># abcd  date  5</span></span><br><span class="line"><span class="comment"># 2020.11 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> uid, <span class="string">`date`</span>, <span class="keyword">COUNT</span>(<span class="string">`level`</span>)</span><br><span class="line"><span class="keyword">from</span> table1</span><br><span class="line"><span class="keyword">where</span> <span class="string">`date`</span> &gt;= <span class="string">&quot;2020-11-01&quot;</span> <span class="keyword">and</span> <span class="string">`date`</span> &lt; <span class="string">&quot;2020-12-01&quot;</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> uid, <span class="string">`date`</span>;</span><br></pre></td></tr></table></figure><p>第二个就是排序, 给出id和分数, 让输出排名. 这个题有窗口函数就很简单, 但是写完了之后, 面试官告诉我窗口函数里面的order by就已经对数据进行排序了, 外面就不用再order by一次了. 这个我是不知道的. </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># uid score</span></span><br><span class="line"><span class="keyword">select</span> uid, score, <span class="keyword">rank</span>() <span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> score <span class="keyword">desc</span>) <span class="keyword">as</span> <span class="string">`rank`</span></span><br><span class="line"><span class="keyword">from</span> table2</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> score <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><p>下一个问题就是介绍三个窗口函数, <code>rank()    row_number()    dense_rank()</code>的区别了, 这个不难, 然后就说让我不用窗口函数实现排序. <strong>这个假如我之前没学过绝对写不出来, 所以这里要推荐一波SQL50题[<a href="https://www.jianshu.com/p/476b52ee4f1b">50道SQL练习题及答案与详细分析 - 简书 (jianshu.com)</a>], 学完这些基本的SQL都不用怕了. 当然里面也包括不使用窗口函数完成排序.</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> uid, t1.score, (<span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> t1 <span class="keyword">as</span> tmpT1 <span class="keyword">where</span> t1.score &lt; tmpT1.score) + <span class="number">1</span> <span class="keyword">as</span> <span class="string">`rank`</span></span><br><span class="line"><span class="keyword">from</span> t1</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> t1.score <span class="keyword">desc</span>;</span><br><span class="line"></span><br><span class="line">      rank()  row_number()    dense_rank()</span><br><span class="line">100   1        1              1</span><br><span class="line">90    2        2              2</span><br><span class="line">90    2        3              2</span><br><span class="line">80    4        4              3</span><br></pre></td></tr></table></figure><p>然后最后问的是mapreduce流程, 这个在之前的面试中也问道过, 所以很轻易地答出来了, 答得也比较完整.</p><p>最后出人意料的是没问算法题. 可能SQL就已经算是算法题了? 但是这个难度和算法题不是一个难度的吧</p><h2 id="2-面试感想"><a href="#2-面试感想" class="headerlink" title="2. 面试感想"></a>2. 面试感想</h2><p>感觉这次的面试不太像我想要的岗位, 感觉更偏向数据仓库这方面, MySQL和SQL语法问的比较多, Java几乎没问, 项目问的时候也集中在MySQL这个点上(分表什么的). Java多线程没问, 集合没问. 算法题也没问. </p><p>我记得当时约面试的时候HR给我说大数据开发实习有2个方向, 一个是偏Java开发的, 一个是偏数据仓库的. 我还特意选择了偏Java的. 没想到问的还是这么偏数仓.</p><p>其实感觉数仓会比较无聊, 天天当curd boy, SQL boy. 所以应该会选择第一个我面试的大数据开发岗吧, 至少还能玩玩spark和flink</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;1-面试描述&quot;&gt;&lt;a href=&quot;#1-面试描述&quot; class=&quot;headerlink&quot; title=&quot;1. 面试描述&quot;&gt;&lt;/a&gt;1. 面试描述&lt;/h2&gt;&lt;p&gt;这是我人生的第三次面试. 投的这两家网易的大数据开发实习岗都接到面试通知了, 但是没想到爱奇艺竟然在简历关挂了, 给我的理由是人已经招满了. 不知道是真的招满了还是简历关就被刷了.&lt;/p&gt;</summary>
    
    
    
    <category term="面经" scheme="https://yoursite/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="面经" scheme="https://yoursite/tags/%E9%9D%A2%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>网易传媒大数据开发实习生二面面经</title>
    <link href="https://yoursite/2020/12/14/%E9%9D%A2%E7%BB%8F/%E7%BD%91%E6%98%93%E4%BC%A0%E5%AA%92%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%BA%8C%E9%9D%A2%E9%9D%A2%E7%BB%8F/"/>
    <id>https://yoursite/2020/12/14/%E9%9D%A2%E7%BB%8F/%E7%BD%91%E6%98%93%E4%BC%A0%E5%AA%92%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%BA%8C%E9%9D%A2%E9%9D%A2%E7%BB%8F/</id>
    <published>2020-12-14T04:14:53.000Z</published>
    <updated>2021-04-07T07:37:13.918Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0"><a href="#0" class="headerlink" title="0."></a>0.</h2><p>先说这次凉的教训吧, </p><p><strong>简历上的东西一定要会, 不管是不是和面试的岗位相关!!!!!</strong></p><p><strong>简历上的东西一定要会, 不管是不是和面试的岗位相关!!!!!</strong></p><p><strong>简历上的东西一定要会, 不管是不是和面试的岗位相关!!!!!</strong></p><p>这次我面试的是大数据开发, 本来以为不会考机器学习算法, 结果大部分时间都在考算法…..</p><p>主要原因还是在我, 不应该在简历上写那些半懂不懂的东西, 我本来以为我在简历上的一个Python 神经网络的项目不会被问到, 结果整个面试过程中都在问. 问到了tensorflow <strong>(被问到这里的时候就已经有种不好的预感了)</strong>, 问到了LSTM和GRU模型, 我只会LSTM, 然后就讲了一下LSTM大概的结构, 然后又问我LSTM那几个参数是怎么算的. <strong>当时我都懵了, 心想大数据开发岗也要问这么深的吗</strong>, 因为这个项目是我2020.5月份做的, 所以肯定是记不太清具体的算法的. 后面问了个 所以就理所应当的凉掉了这次面试.</p><a id="more"></a><h2 id="面试描述"><a href="#面试描述" class="headerlink" title="面试描述"></a>面试描述</h2><p>首先还是自我介绍. </p><p>完了之后就让用Hadoop或Spark写一个wordcount. 我肯定是选spark, 两行就能写出来. </p><p>写出来之后又让用 Spark SQL 的Dataframe写, 这个就涉及到我知识的盲区了. 我当时认为面试官的意思是每一列都有很多个逗号隔开的单词, 但是SQL不应该是每一列表示的意义不一样吗, 应该是那种某一列表示的是单词, 其他列表示其他属性. 可能当时太紧张了, 没反应过来. 后来面完了才发现Spark SQL也有flatMap这个方法, 可以把多列不同的word统一成一列不同的word</p><p><strong>我给他说不会, 但是感觉用pandas能处理</strong>. 但是我说的用pandas处理不是用pandas里自带的处理, 而是只是用Dataframe储存这个文件, 然后2个for遍历一遍放到个哈希表里. </p><p>面试官又给我说, 让我用pandas来做吧, 我这时候都有打死自己的冲动了(让你之前信誓旦旦的说pandas能做!). 这时候我弱弱地问面试官能不能把数据挨个读取放到hashMap里面统计, 面试官说不行, 彻底浇灭了我最后一丝希望. 最后很尴尬, 面试官看我做不出来, 就换了个问题.</p><p>这个问题更要命, 问我聊不了解tensorflow. (<strong>如果说问我python的pandas我还能理解是因为我简历上写了才问的, 那问到tensorflow的时候我就觉得这个面试官应该是搞机器学习算法的, 彻底凉了</strong>) 我只能回答会用tensorflow构建基本的神经网络模型(这就是废话, 说白了就是只会调API, 底层狗屁不会)</p><p>然后又问的LSTM和GRU模型, 这个GRU我是真不会, 只知道是RNN的一种变形. LSTM会倒是会, 但那是6个月之前学的了. 所以我就说了下大概, 信息在网络中的传播方向, 记忆门和忘记门什么的. 本来以为说到这里就可以了, 没想到又继续让我讲算法的实现原理, 这个我就真的一点都不会了. 其实问到这里我就基本上知道自己肯定凉了.</p><p>问完这些关于神经网络的, 好像又问了一个topK问题. 这个面试当中很常见了, 每一个机器选出K个最大的, 然后集中到一台机器上再选择一遍即可.</p><p>最后问的算法题是旋转数组中的查找, 没有重复元素.</p><p>这个我是在leetcode上面做过的. 但是因为紧张和之前面试问的我心态快炸了, 导致发挥的也不是太好.</p><p>我用的是构造辅助函数的方法, 写了一个普通的二分查找函数, 当nums[begin] &lt; nums[end] 的时候就用普通的二分查找</p><p>后来面试官说不用普通的二分查找, 这个旋转数组也包含普通的情况</p><p>这时候我就有点慌, 分类讨论做的也不是很好, 并且把<strong>旋转数组中的查找</strong>和<strong>旋转数组中的最小值</strong>这两个题弄混了.</p><p>事实上, 在<strong>旋转数组中的查找</strong>里面, 需要分类讨论4次, 两次来判断mid 在左数组左半部分还是右半部分, 剩下两次判断target在mid的左边还是右边. 而在<strong>旋转数组最小值</strong>里面, 只需要分类讨论2次, 最小值在mid左还是最小值在mid右.</p><p>后来是根据面试官提醒才改对的. 整体来说算法题也表现得不怎么样.</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这次失败的主要原因就是简历上写的python数据分析的项目和神经网络不熟, 并且面试官非常懂机器学习. 之前准备的Hadoop, Spark, Kafka, Redis, MySQL都没有问, 反而大部分都在问神经网络算法, 使得自己非常被动.</p><p>还是那个教训, </p><p><strong>简历上的东西一定要会, 不管是不是和面试的岗位相关!!!!!</strong></p><p><strong>简历上的东西一定要会, 不管是不是和面试的岗位相关!!!!!</strong></p><p><strong>简历上的东西一定要会, 不管是不是和面试的岗位相关!!!!!</strong></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;0&quot;&gt;&lt;a href=&quot;#0&quot; class=&quot;headerlink&quot; title=&quot;0.&quot;&gt;&lt;/a&gt;0.&lt;/h2&gt;&lt;p&gt;先说这次凉的教训吧, &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;简历上的东西一定要会, 不管是不是和面试的岗位相关!!!!!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;简历上的东西一定要会, 不管是不是和面试的岗位相关!!!!!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;简历上的东西一定要会, 不管是不是和面试的岗位相关!!!!!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这次我面试的是大数据开发, 本来以为不会考机器学习算法, 结果大部分时间都在考算法…..&lt;/p&gt;
&lt;p&gt;主要原因还是在我, 不应该在简历上写那些半懂不懂的东西, 我本来以为我在简历上的一个Python 神经网络的项目不会被问到, 结果整个面试过程中都在问. 问到了tensorflow &lt;strong&gt;(被问到这里的时候就已经有种不好的预感了)&lt;/strong&gt;, 问到了LSTM和GRU模型, 我只会LSTM, 然后就讲了一下LSTM大概的结构, 然后又问我LSTM那几个参数是怎么算的. &lt;strong&gt;当时我都懵了, 心想大数据开发岗也要问这么深的吗&lt;/strong&gt;, 因为这个项目是我2020.5月份做的, 所以肯定是记不太清具体的算法的. 后面问了个 所以就理所应当的凉掉了这次面试.&lt;/p&gt;</summary>
    
    
    
    <category term="面经" scheme="https://yoursite/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="面经" scheme="https://yoursite/tags/%E9%9D%A2%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>网易传媒大数据开发实习生一面面经</title>
    <link href="https://yoursite/2020/12/11/%E9%9D%A2%E7%BB%8F/%E7%BD%91%E6%98%93%E4%BC%A0%E5%AA%92%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%B8%80%E9%9D%A2%E9%9D%A2%E7%BB%8F/"/>
    <id>https://yoursite/2020/12/11/%E9%9D%A2%E7%BB%8F/%E7%BD%91%E6%98%93%E4%BC%A0%E5%AA%92%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0%E7%94%9F%E4%B8%80%E9%9D%A2%E9%9D%A2%E7%BB%8F/</id>
    <published>2020-12-11T08:03:58.000Z</published>
    <updated>2021-04-01T14:14:46.789Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-面试描述"><a href="#1-面试描述" class="headerlink" title="1. 面试描述"></a>1. 面试描述</h2><p><strong>这次是网易传媒大数据开发实习生的一面, 也是我人生中第一次面试, 很紧张, 自从接到面试通知之后就开始一直在准备.</strong></p><p>但是还是紧张. 巨紧张.</p><a id="more"></a><ol><li><p>首先还是自我介绍, 这里我就说了下我项目的一些实现,我简历上有两个项目,  第一个是Java + redis + mysql. 讲了下实现原理, 生产者消费者什么的, 然后第二个项目是关于Python数据分析的, 和这次面试关联不大, 所以我就一句话带过, 然后说了下项目里面的创新点, 就是对算法改进避免生成多个小文件, 而是生成大文件和索引文件.</p></li><li><p>自我介绍完了之后面试官顺便就问java多线程怎么实现的, 我回答的是线程池和阻塞队列, 然后强调了下是根据逻辑确定的线程池的那几个参数, 而不是用的默认的. </p></li><li><p>然后就开始问基础知识了, 先问的java里面的多态, 这个我就简单回答了一下. 父类引用指向子类类型, 执行过程中使用的子类的方法.因为实在不知道要怎么展开来说了</p></li><li><p>然后让讲一讲java里面常用的集合, 我是根据接口来讲的, 先讲到了分为2个接口Collection, Map, 然后再讲的Set, List, Queue这些.</p></li><li><p>下一个问题就是将Mapreduce流程. 这个我前几天才刚看过, 讲了很长时间. 从读取一个文件开始, 用InputFormat类分区分为InputSplit, 然后也讲到了RecordReader, 也讲了默认的是TextInputFormat. 下面就讲的是继承Mapper类重写map方法, 然后就讲shuffle, 这个shuffle向来是重点, 所以也没什么问题.分为map端的shuffle和reduce端的shuffle. <strong>然后我记得我好像忘了将reduce端shuffle之后处理逻辑了, 就是再次归并, 执行重写的reduce方法了. 可能是因为紧张忘了</strong>. 然后最后说到保存到文件用的类OutputFormat, 默认是TextOutputFormat保存为文本文件.  总体上感觉这个题答得还行</p></li><li><p>讲一下常用的spark算子. 这个感觉也没什么问题, 我是将算子分为transformation和action算子, 然后transformation算子又分为宽依赖和窄依赖算子. 三部分分别讲了下. </p></li><li><p>讲一下数据倾斜的解决方法. <strong>(我一听到数据倾斜的时候, 我心里就在想可能要gg了, 因为我之前知道大数据面试有数据倾斜这么个问题, 但是一直没有系统的准备过这个题.)</strong> 所以这道题完全就是自我发挥了. 我给了两种办法, 一种是重新分区, 换hash函数. 另外一种是从业务逻辑的角度, 增加几个特征, 使得很多key都相同的几率降低. </p></li><li><p>又问到了常用的排序算法, 我分为了两类. 交换排序和非交换排序. <strong>因为紧张我还给说错了(这里我听回放录音才听出来, 我把堆排序放到非交换排序里面了, 本来想说的是基数排序).</strong>  <strong>然后我又附加的说了外部排序. 当时的想法就是(前天刚复习的外部排序k路归并算法, 看胜者树败者树看了一晚上, 这里不说就亏了)</strong> </p></li><li><p>问了redis基本数据类型, 我说了8种, 5种基本的, 3种扩展的. </p></li><li><p>然后又问了熟不熟linux的操作, 问查看进程, 我回答的ps命令. 一般用的是ps -ef <strong>(其实ef具体代表什么我也不太清楚)</strong> 然后我讲了一下ps命令一般和grep命令通过管道连用, 查看指定的进程. 然后也回答了对于java程序, 还可以用jps. </p></li><li><p>算法题, 链表相加. <code>给出两个 非空 的链表用来表示两个非负的整数，并且它们的每个节点只能存储 一位 数字。输出这两个数相加的结果</code></p><p>本来这题真的不难, 在leetcode上我觉得难度连medium都不会达到. 但是最要命的是, <strong>面试官要让我用java自带的LinkedList&lt;&gt;来写这个函数.</strong> 这和之前在leetcode上的链表题完全不同!!! 只能用LinkedList就意味着没有next指针可以操作, 就只能用迭代器. 而我之前对迭代器并不熟悉. </p><p>然后想了一会, 想出来了, 然后又碰到了一个问题, 没法用指针, 就没法链表翻转, 当时就在赌, Collections里面有reverse这个方法. </p><p>其实是有的. 但我把函数用错了. Collections.reverse(a)是把a翻转返回void, 我当时以为返回一个翻转后的链表. 还好没运行.</p><p>面试的时候还想到了不反转链表, 因为LinkedList是双向链表, 可以从后向前遍历. 但是我忘了怎么返回最后一个元素的方法了.</p><p>等面试完, 才想到可以用listIterator来这样做. 但是已经没有办法了. </p></li></ol><h2 id="2-总结"><a href="#2-总结" class="headerlink" title="2. 总结"></a>2. 总结</h2><p>个人觉得前面知识部分答的还可以, 就是数据倾斜没有回答好. </p><p><strong>需要改进的地方在算法题上, 因为之前都是在leetcode上刷题, 所以像LinkedList这种数据结构根本用不到, 这才导致了对没有指针的链表操作十分不熟悉, 导致了更加紧张, 写的时候丢三落四(例如这一次面试就忘了两个链表相加之后把最高位的0去掉, 也忘了用listIterator可以直接从后向前开始遍历, 但还好没忘首先判断链表是不是null, 要是这个忘了可能前面答的再好也没用了).</strong> </p><p>也提醒大家, 不要以为leetcode刷好就没事了. 常用的集合的API也一定要掌握起来.</p><p>贴上我漏洞百出的代码吧, 作为警醒希望下次不要犯这么低级的错误</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">LinkedList&lt;Integer&gt; <span class="title">add</span><span class="params">(LinkedList&lt;Integer&gt; l1, LinkedList&lt;Integer&gt; l2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l1 == <span class="keyword">null</span> || l2 == <span class="keyword">null</span>)&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NullPointerException();</span><br><span class="line">    &#125;</span><br><span class="line">    LinkedList&lt;Integer&gt; ans = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">    LinkedList&lt;Integer&gt; l1Reverse = Collections.reverse(l1);   <span class="comment">//Collections.reverse(a)是把a翻转返回void</span></span><br><span class="line">    LinkedList&lt;Integer&gt; l2Reverse = Collections.reverse(l2);   <span class="comment">//不是返回一个翻转后的新的链表</span></span><br><span class="line">    Iterator it1 = l1Reverse.iterator();           <span class="comment">// Iterator是泛型接口, 应该用Iterator&lt;Integer&gt;</span></span><br><span class="line">    Iterator it2 = l2Reverse.iterator();</span><br><span class="line">    <span class="keyword">int</span> carry = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> remainder = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(it1.hasNext() || it2.hasNext())&#123;</span><br><span class="line">        <span class="keyword">int</span> a1 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> a2 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(!it1.hasNext())&#123;</span><br><span class="line">            a1 = <span class="number">0</span>;</span><br><span class="line">            a2 = it2.next();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(!it2.hasNext())&#123;</span><br><span class="line">            a1 = it1.next();</span><br><span class="line">            a2 = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            a1 = it1.next();</span><br><span class="line">            a2 = it2.next();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> sum = a1 + a2 + carry;</span><br><span class="line">        remainder = sum % <span class="number">10</span>;</span><br><span class="line">        carry = sum / <span class="number">10</span>;</span><br><span class="line">        ans.add(remainder);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(carry != <span class="number">0</span>)&#123;</span><br><span class="line">        ans.add(carry);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Collections.reverse(ans);       <span class="comment">//这里也忘了去除加法后的前导0了. 太紧张什么都忘了</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;1-面试描述&quot;&gt;&lt;a href=&quot;#1-面试描述&quot; class=&quot;headerlink&quot; title=&quot;1. 面试描述&quot;&gt;&lt;/a&gt;1. 面试描述&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;这次是网易传媒大数据开发实习生的一面, 也是我人生中第一次面试, 很紧张, 自从接到面试通知之后就开始一直在准备.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;但是还是紧张. 巨紧张.&lt;/p&gt;</summary>
    
    
    
    <category term="面经" scheme="https://yoursite/categories/%E9%9D%A2%E7%BB%8F/"/>
    
    
    <category term="面经" scheme="https://yoursite/tags/%E9%9D%A2%E7%BB%8F/"/>
    
  </entry>
  
</feed>
